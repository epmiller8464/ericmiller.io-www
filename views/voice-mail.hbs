{{#section 'head'}}
    <!--<link rel="stylesheet" type="text/css" href="/stylesheets/demo.css"/>-->
    <!--<link rel="stylesheet" type="text/css" href="/stylesheets/obnoxious.css"/>-->
    <script src="/recordrtc/RecordRTC.min.js"></script>
    <script src="/socket.io-client/dist/socket.io.slim.js"></script>
{{/section}}
<section id="alert-row" class="row hide">
    <div class="col-md-12">
        <div class="alert alert-danger text-center fs-3x" role="alert" style="font-size:0.80em;">
            <b>This site is built with WebRTC, for the full experience it's recommended to use a desktop version of
                Chrome, Firefox, Opera or IE Edge!
            </b>
        </div>
    </div>
</section>
<section id="touch" class="content content--bg content--bg-mic content--nopadding">
    <div class="content content--bg content-bg-overlay overlay-dark">
        <div class="content__inner flexy flexy--center">
            <h2 class="title br br-o">Web Voice Mail</h2>
            <p class="voice-message-text fs-2_5x">
            </p>
        </div>
        <div class="interaction interaction--corner interaction--light">
            <a id="go-to-record" data-scroll href="#record-section" class="link-more">
                <span class="fa fa-microphone fs-2x"></span><br>Leave A Message
            </a>
        </div>
    </div>
</section>
<section id="record-section" class="content content--bg content--bg-recorder content--nopadding row">
    <div id="wavebg" class="content content--bg content-bg-overlay overlay-dark">
        <div class="content__inner content__inner--fheight flexy--center recording-section">
            <!--<h2 class="content__title br text-muted">Web Voice Mail</h2>-->
            <div class="">
                <button id="show-record-btn" type="button" class="btn btn-link fs-3x text-muted">
                    <span class="fa fa-microphone text-success" aria-hidden="true"></span><br/>
                    <small>Start Recording</small>
                </button>
            </div>
            <div id="record-container" class="col-md-12 hide">
        <span class="input-group-lg">
            <span class="input-lg">
                <label>Enter a valid email</label>
                <input class="form-control" type="email" autocomplete="off" name="email" pattern="/.+\@.+\..+/"
                       placeholder="e.g. tom@gmail.com" style="background: transparent;"/>
                <label for="email"></label>
            </span>
        </span>
                <div class="audio-controls">
                    <div class="row">
                        <div class="col-md-12">
                            <canvas id="live-audio-canvas" class="center-block"></canvas>
                            <img id="snapshot" class="center-block">
                            <div class="col-md-12">
                                <label class="status on clearfix">The mic is hot.....</label>
                                <label class="time-remaining pull-right"></label>
                            </div>
                        </div>
                    </div>


                    <div class="text-center" role="group" aria-label="...">
                        <button id="record-btn" type="button" class="btn btn-link btn-lg">
                            <span class="fa fa-microphone" aria-hidden="true"></span> Record
                        </button>
                        <button id="stop-recording-btn" type="button" class="btn btn-link btn-lg">
                            <span class="glyphicon glyphicon-stop" aria-hidden="true"></span> Stop
                        </button>
                        <button id="play-btn" type="button" class="btn btn-link btn-lg">
                            <span class="glyphicon glyphicon-play-circle" aria-hidden="true"></span> replay
                        </button>
                        <button id="upload-btn" type="button" class="btn btn-link btn-lg" data-toggle="tooltip"
                                data-placement="right" title="Recording save automatically but you can delete yours">
                            <span class="glyphicon glyphicon-save" aria-hidden="true"></span> Save Recording
                        </button>

                    </div>
                </div>
                <span>
                    <audio id="camera-preview" controls class="hide"
                           style="border: 1px solid rgb(15, 158, 238); width: 94%;"></audio>
                <span style="display:none;">
                    <progress id="progress-bar" value="0" max="100"></progress>
                    <br/>
                    </span>
                <span>
            </span>
            </span>
                <span class="input-group-lg step-2">
        </span>
                <button type="button" class="btn btn-link next pull-right ">Next</button>
            </div>
        </div>
        <div class="interaction interaction--corner interaction--light">
            <a id="go-to-record" data-scroll href="#record-section" class="link-more">
                <span class="glyphicon glyphicon-menu-down fs-2x"></span><br>Previous Recordings
            </a>
        </div>
    </div>
</section>
<section class="container content">
    <div id="scroll-to-section" class="col-md-12 text-center scroll-container">
        <a id="go-to-record" data-scroll href="#record-section" class="fs-2x">
            <span class="glyphicon glyphicon-menu-down" aria-hidden="true"></span>
        </a>
    </div>

    <div class="col-md-12 text-center scroll-container">
        <a href="#recorded-section" data-scroll id="" type="button" class="fs-2x">
            <span class="glyphicon glyphicon-menu-down animated" aria-hidden="true"></span>
        </a>
    </div>
    <section id="recorded-section" class="row">
        <h2 class="text-center">Previous Recordings</h2>
        <hr/>
        {{#each images}}
            <div class="col-md-6">

                <div class="thumbnail audio-control" id="acid_{{@index}}" data-audio-src="{{this.audio_path}}"
                     data-recording-key="{{this.key}}"
                     data-wave-form="{{this.waveForm}}"
                     data-wave-form-container="wf_{{@index}}">
                    <img src="{{this.image}}" alt="Some image"/>
                    <div id="wf_{{@index}}" style="overflow: hidden;" class="wave-form">
                    </div>
                    <div class="caption">
                        <p>
                            <button type="button" class="play btn btn-link" disabled>
                                <span class="glyphicon glyphicon-play" aria-hidden="true"></span>
                            </button>
                            <button type="button" class="pause btn btn-link" disabled>
                                <span class="glyphicon glyphicon-pause" aria-hidden="true"></span>
                            </button>
                            <button type="button" class="stop btn btn-link" disabled>
                                <span class="glyphicon glyphicon-stop" aria-hidden="true"></span>
                            </button>
                            <button type="button" class="delete btn btn-link btn-lg pull-right" data-toggle="tooltip"
                                    data-placement="right"
                                    title="Recording save automatically but you can delete yours">
                                <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                            </button>
                        </p>
                    </div>
                    <div class="row" style="padding: 0 10px 5px 10px !important;margin: 0;">
                        <div class="col-md-12 col-sm-12 text-success">
                            <label class="status pull-left">&nbsp;</label>
                            <label class="duration pull-right">&nbsp;</label>
                        </div>
                    </div>
                </div>
            </div>
        {{/each}}
    </section>
    <div id="top-scroll" class="">
        <a href="#" class="btn btn-link pull-right" data-scroll>
            <span class="glyphicon glyphicon-menu-up animated" aria-hidden="true"></span><br/><b>Top</b>
        </a>
    </div>
</section>




{{#section 'scripts'}}

    <script src="/lodash/lodash.min.js"></script>
    <script src="/javascripts/EventEmitter.js"></script>
    <script src="/d3/build/d3.min.js"></script>
    <script src="/howler/dist/howler.min.js"></script>
    <script src="/siriwavejs/siriwave.js"></script>
    <script src="/javascripts/Audio-Bundle.js"></script>
    <script src="/javascripts/AudioComponent.js"></script>

    <script>
        var _player

        function resizeContainer () {
            var h = $(window).height()
            $('.container.content').height(h * 3)
        }

        function repositionCarrot () {
//            var h = $(window).height()
//            var z = h - (h * 0.05) - $('.voice-message-container').offset().top
//            $('[data-scroll]').parent('div').offset({top: z})
//            $('#record-section').offset({top: z + ( z * 0.5)})
        }

        resizeContainer()
        smoothScroll.init()
        repositionCarrot()

        var stats = {step: 1}

        var ci, pos2 = 50

        function progress (elementId) {}

        console.log()
        if (browser().mobile) {
            $('#alert-row').removeClass('hide')

        }

        function init () {

            showTypedVoiceMailMessage()

//            siriWave.start()
            var voices = $('div[data-audio-src]').map(function (i, el) {
                return {
                    el: '#' + $(el).prop('id'),
                    recordingKey: $(el).data('recording-key'),
                    waveFormEl: $(el).data('wave-form-container'),
                    waveform: [$(el).data('wave-form').split(',')],
                    controls: {
                        $play: $(el).find('button.play')[0],
                        $pause: $(el).find('button.pause')[0],
                        $stop: $(el).find('button.stop')[0],
                        $delete: $(el).find('button.delete')[0],
                        $status: $(el).find('.status')[0],
                        $duration: $(el).find('.duration')[0]
                    },
                    howl: {
                        src: [$(el).data('audio-src')],
                        autoplay: false,
                        preload: false,
                        loop: false,
                        volume: 0.5,
                        html5: true
                    }

                }
            }).toArray()

//            console.log('audio components: %s', voices.length)
//            console.log(voices)

            for (var i = 0; i < voices.length; i++) {
                var config = voices[i]
                var audio = new AudioComponent(config)
                audioComponents.push(audio)
            }
            // todo: clear loading dialog
//             progress($(target).data('target-id'))
        }

        var audioComponents = []

        $(document).ready(function () {

            $('#top-scroll').affix({
                offset: {
                    top: $(window).height(),
//                    bottom: function () {
//                        return (this.bottom = $('.footer').outerHeight(true))
//                    }
                }
            })
            $(window).on('resize', function () {
                if ($(window).scrollTop() === 0) {
                    repositionCarrot()
                }
            })

            init()
            showAudioControls()

            $('[name=email]').keypress(function () {
                if (new RegExp(/.+\@.+\..+/).test($(this).val())) {
                    $('.btn.next').removeClass('hide')

                } else {
                    hideAudioControls()
                }
            })
            $('[name=email]').focusout(function () {
                if (new RegExp(/.+\@.+\..+/).test($(this).val())) {
                    $('.btn.next').removeClass('hide')
//                    incrementStep()
                } else {
//                    alert('invalid asshole')
                    $(this).addClass('hasError')
                }

            })

            $('.next').click(function () {
                //1. hide the previous step
                //2. enable client side socket.io code
                showAudioControls()
            })

            $('#show-record-btn').click(function () {
//                $('#record-container').toggleClass('hide')
            })

//            $('body').click(function (e) {
//                console.log('User tapped #myElement')
//            })
            var el = document.getElementsByTagName('body')[0]
            var t = false
            el.addEventListener('touchstart', function () {
                if (t)
                    return
                t = true
                var played = false// window.localStorage.getItem('_vm_played')
                var player = new Howl({
                    src: ['./media/em-vm.wav'],
//                format: ['m4a'],
                    autoplay: true,
                    preload: true,
                    loop: false,
                    volume: !(played) ? 0.5 : 0.1,
                    html5: true,
                    rate: 0.83,
                    mute: true
//                mute: ((played) | played === 10)
                })
//            _player.load()
//            _player.onload(() => {})
                player.once('load', function () {
//                _player.play()
                    console.log(_player.duration())

                    $('.voice-message-text').typed({
                        strings: ['You have reached the voice mail of Eric Miller. Please leave your name, number and a short message and i will get back to you as soon as possible. <br/> Thanks!'],
                        typeSpeed: 0.99,
//                    startDelay: 500,
                        html: true,
                        showCursor: false,
                        startDelay: 0,
//                    onStart: (arrayPos, self) => {console.log('on start')},
//                    preStringTyped: (arrayPos, self) => {console.log('on preStringTyped %s %s', arrayPos, self)},
                        callback: function () {
                            $('#go-to-record').removeClass('hide').children('.glyphicon').addClass('intensifies').fadeIn()
                            var i = window.localStorage.getItem('_vm_played')
                            window.localStorage.setItem('_vm_played', ++i)
                            console.log(i)
                        }
                    })
                })
//
                player.on('end', function () {
                    if (!played)
                        window.localStorage.setItem('_vm_played', 1)
                })

            }, false)
//            var _h = $('body').tap('tap', function(e) {
//                console.log('User tapped #myElement');
//                $('body').off('tap', _h);

//            });

        })

        function showAudioControls () {
            $('.audio-controls').removeClass('hide')
            initAudio()
        }

        function hideAudioControls () {
//            $('.audio-controls').addClass('hide')
        }

        function showTypedVoiceMailMessage () {
            var played = false// window.localStorage.getItem('_vm_played')
            _player = new Howl({
                src: ['./media/em-vm.wav'],
//                format: ['m4a'],
                autoplay: true,
                preload: true,
                loop: false,
                volume: !(played) ? 0.5 : 0.1,
                html5: true,
                rate: 0.83,
                mute: true

//                mute: ((played) | played === 10)
            })
//            _player.load()
//            _player.onload(() => {})
            _player.once('load', function () {
//                _player.play()
                console.log(_player.duration())

                $('.voice-message-text').typed({
                    strings: ['You have reached the voice mail of Eric Miller. Please leave your name, number and a short message and i will get back to you as soon as possible. <br/> Thanks!'],
                    typeSpeed: 0.99,
//                    startDelay: 500,
                    html: true,
                    showCursor: false,
                    startDelay: 0,
//                    onStart: (arrayPos, self) => {console.log('on start')},
//                    preStringTyped: (arrayPos, self) => {console.log('on preStringTyped %s %s', arrayPos, self)},
                    callback: function () {
                        $('#go-to-record').removeClass('hide').children('.glyphicon').addClass('intensifies').fadeIn()
                        var i = window.localStorage.getItem('_vm_played')
                        window.localStorage.setItem('_vm_played', ++i)
                        console.log(i)
                    }
                })
            })
//
            _player.on('end', function () {
                if (!played)
                    window.localStorage.setItem('_vm_played', 1)
            })
        }

    </script>


{{/section}}