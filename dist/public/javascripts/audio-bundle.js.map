{"version":3,"sources":["../../../public/javascripts/Audio-Bundle.js"],"names":["context","window","AudioContext","webkitAudioContext","createGain","createGainNode","createDelay","createDelayNode","createScriptProcessor","createJavaScriptNode","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","socketio","io","mediaStream","on","startRecording","disabled","currentTime","document","getElementById","stopRecording","playButton","deleteRecordingButton","cameraPreview","progressBar","querySelector","percentage","liveAudioCanvas","playbackAudioCanvas","recordAudio","recordVideo","sample","liveSample","BufferLoader","urlList","onload","bufferList","Array","loadCount","prototype","loadBuffer","url","index","request","XMLHttpRequest","console","log","open","responseType","loader","decodeAudioData","response","buffer","alert","length","error","onerror","send","load","i","bytesToSize","bytes","k","sizes","parseInt","Math","floor","pow","toPrecision","playSound","time","source","createBufferSource","connect","destination","start","loadSounds","obj","soundMap","names","paths","name","path","push","bufferLoader","_clearInterval","MAXRECORDTIME","WIDTH","HEIGHT","SMOOTHING","FFT_SIZE","WebVoiceMail","config","cb","input","createMediaStreamSource","filter","createBiquadFilter","frequency","value","type","Q","analyser","createAnalyser","freqs","Uint8Array","frequencyBinCount","times","sampleBuffer","isLive","startTime","startOffset","maxTime","canvas","togglePlayback","play","loop","duration","onEnded","draw","bind","stop","disconnect","src","captureCanvasImage","e","clearInterval","endRecording","timestamp","smoothingTimeConstant","fftSize","getByteFrequencyData","getByteTimeDomainData","width","drawContext","getContext","height","t","percent","offset","barWidth","hue","fillStyle","getFrequencyValue","fillRect","freq","nyquist","sampleRate","round","VisualizerSample","monitorTime","onError","onStreamError","image","toDataURL","$","prop","minDecibels","maxDecibels","onLoaded","text","isPlaying","initAudio","navigator","getUserMedia","audio","video","stream","JSON","stringify","onclick","addClass","RecordRTC","recorderType","StereoAudioRecorder","onAudioProcessStarted","URL","createObjectURL","muted","controls","showProgress","setRecordingDuration","recordingDuration","imageCaptured","Date","now","diff","current","recordingKey","fileName","ajax","method","data","key","done","msg","location","href","payload","_fileName","split","pop","replace","result","parentNode","style","display","removeClass","poster","getDataURL","audioDataURL","files","getBlob","dataURL","email","waveForm","emit"],"mappings":"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","file":"Audio-Bundle.js","sourcesContent":["context = new (window.AudioContext || window.webkitAudioContext || webkitAudioContext)()\n\nif (!context.createGain) { context.createGain = context.createGainNode }\nif (!context.createDelay) { context.createDelay = context.createDelayNode }\nif (!context.createScriptProcessor) { context.createScriptProcessor = context.createJavaScriptNode }\n\n// shim layer with setTimeout fallback\nwindow.requestAnimFrame = (function () {\n  return window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    function (callback) {\n      window.setTimeout(callback, 1000 / 60)\n    }\n})()\n\nvar socketio = io()\nvar mediaStream = null\nsocketio.on('connect', function () {\n  startRecording.disabled = false\n})\nvar currentTime = 0\nvar startRecording = document.getElementById('record-btn')\nvar stopRecording = document.getElementById('stop-recording-btn')\nvar playButton = document.getElementById('play-btn')\nvar deleteRecordingButton = document.getElementById('delete-upload-btn')\nvar cameraPreview = document.getElementById('camera-preview')\nvar progressBar = document.querySelector('#progress-bar')\nvar percentage = document.querySelector('#percentage')\nvar liveAudioCanvas = document.querySelector('#live-audio-canvas')\nvar playbackAudioCanvas = document.querySelector('#playback-audio-canvas')\nvar recordAudio\nvar recordVideo\nvar sample\nvar liveSample\n\nfunction BufferLoader (context, urlList, callback) {\n  this.context = context\n  this.urlList = urlList\n  this.onload = callback\n  this.bufferList = new Array()\n  this.loadCount = 0\n}\n\nBufferLoader.prototype.loadBuffer = function (url, index) {\n  // Load buffer asynchronously\n  var request = new XMLHttpRequest()\n  console.log(url)\n  request.open('GET', url, true)\n  request.responseType = 'arraybuffer'\n\n  var loader = this\n\n  request.onload = function () {\n    // Asynchronously decode the audio file data in request.response\n    loader.context.decodeAudioData(\n      request.response,\n      function (buffer) {\n        if (!buffer) {\n          alert('error decoding file data: ' + url)\n          return\n        }\n        loader.bufferList[index] = buffer\n        if (++loader.loadCount == loader.urlList.length) { loader.onload(loader.bufferList) }\n      },\n      function (error) {\n        console.error('decodeAudioData error', error)\n      }\n    )\n  }\n\n  request.onerror = function () {\n    alert('BufferLoader: XHR error')\n  }\n\n  request.send()\n}\n\nBufferLoader.prototype.load = function () {\n  for (var i = 0; i < this.urlList.length; ++i) { this.loadBuffer(this.urlList[i], i) }\n}\n\nfunction bytesToSize (bytes) {\n  var k = 1000\n  var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\n  if (bytes === 0) {\n    return '0 Bytes'\n  }\n  var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10)\n  return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i]\n}\n\nfunction playSound (buffer, time) {\n  var source = context.createBufferSource()\n  source.buffer = buffer\n  source.connect(context.destination)\n  source[source.start ? 'start' : 'noteOn'](time)\n}\n\nfunction loadSounds (obj, soundMap, callback) {\n  // Array-ify\n  var names = []\n  var paths = []\n  for (var name in soundMap) {\n    var path = soundMap[name]\n    names.push(name)\n    paths.push(path)\n  }\n  var bufferLoader = new BufferLoader(context, paths, function (bufferList) {\n    for (var i = 0; i < bufferList.length; i++) {\n      var buffer = bufferList[i]\n      var name = names[i]\n      obj[name] = buffer\n    }\n    if (callback) {\n      callback()\n    }\n  })\n  bufferLoader.load()\n}\n\n/*\n * Copyright 2013 Boris Smus. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _clearInterval\nvar MAXRECORDTIME = 45000\n\nvar WIDTH = 640\nvar HEIGHT = 230\n\n// Interesting parameters to tweak!\nvar SMOOTHING = 0.85\n// var FFT_SIZE = 2048 << 0x01\nvar FFT_SIZE = 1024\n// var FFT_SIZE = 2048 / 2\n\nfunction WebVoiceMail (config, cb) {\n  this.mediaStream = config.source\n  this.input = context.createMediaStreamSource(this.mediaStream)\n  // Connect the input to a filter.\n  this.filter = context.createBiquadFilter()\n  this.filter.frequency.value = 60.0\n  this.filter.type = 'notch'\n  this.filter.Q = 10.0\n\n  this.analyser = context.createAnalyser()\n  // Connect graph.\n  this.input.connect(this.filter)\n  this.filter.connect(this.analyser)\n\n  this.freqs = new Uint8Array(this.analyser.frequencyBinCount)\n  this.times = new Uint8Array(this.analyser.frequencyBinCount)\n  this.sampleBuffer = new Uint8Array(this.analyser.frequencyBinCount)\n  this.isLive = true\n  this.startTime = 0\n  this.startOffset = 0\n  this.maxTime = 45000\n  this.index = 0\n  this.canvas = config.canvas\n  return this\n}\n\n// Toggle playback\nWebVoiceMail.prototype.togglePlayback = function () {\n  this.play()\n}\n\nWebVoiceMail.prototype.play = function () {\n  // $('#rerecord').prop('disabled', true)\n  // this.stop()\n\n  this.startTime = context.currentTime\n  console.log('started at', this.startOffset)\n  this.source = context.createBufferSource()\n  // Connect graph\n  this.source.connect(this.analyser)\n  this.source.buffer = this.buffer\n  this.source.loop = false\n  // Start playback, but make sure we stay in bound of the buffer.\n  this.source[this.source.start ? 'start' : 'noteOn'](0, this.startOffset % this.buffer.duration)\n  // Start visualizer.\n  this.isLive = true\n\n  this.source.onEnded = this.onEnded\n  requestAnimationFrame(this.draw.bind(this))\n}\n\nWebVoiceMail.prototype.stop = function () {\n//   if (this.isLive) {\n  try {\n    // this.source[this.source.stop ? 'stop' : 'noteOff'](0)\n    this.mediaStream.stop()\n    this.input.disconnect(0)\n    this.filter.disconnect(0)\n    cameraPreview.src = ''\n    // cameraPreview.stop()\n    this.captureCanvasImage()\n    this.startOffset = 0// += context.currentTime - this.startTime\n    console.log('stopped at', context.currentTime)\n  } catch (e) {\n  }\n\n  this.startOffset = 0\n  this.isLive = false\n}\n\nWebVoiceMail.prototype.disconnect = function () {\n  this.stop()\n  this.input.disconnect(0)\n  this.startOffset = 0\n}\n\nWebVoiceMail.prototype.onEnded = function () {\n  // alert()\n  // this.captureCanvasImage()\n\n  clearInterval(_clearInterval)\n  endRecording()\n}\nvar time = 0\nWebVoiceMail.prototype.draw = function (timestamp) {\n  this.analyser.smoothingTimeConstant = SMOOTHING\n  this.analyser.fftSize = FFT_SIZE / 4\n\n  // Get the frequency data from the currently live stream\n  this.analyser.getByteFrequencyData(this.freqs)\n  this.analyser.getByteTimeDomainData(this.times)\n\n  var width = Math.floor(1 / this.freqs.length, 10)\n  // var width = Math.floor(1 / this.freqs.length, 10)\n\n  // var canvas = document.querySelector('canvas')\n  var drawContext = this.canvas.getContext('2d')\n\n  this.canvas.width = WIDTH * 1.5\n  this.canvas.height = HEIGHT\n  // Draw the frequency domain chart.\n  var t = 0\n\n  for (var i = 0; i < this.analyser.frequencyBinCount; i++) {\n    var value = this.freqs[i]\n    var percent = value / 256\n    var height = HEIGHT * percent\n    var offset = HEIGHT - height - 1\n    var barWidth = WIDTH / this.analyser.frequencyBinCount\n    // var barWidth = this.freqs.length / this.analyser.frequencyBinCount\n    var hue = i / this.analyser.frequencyBinCount * 360\n    drawContext.fillStyle = 'hsl(' + hue + ', 100%, 50%)'\n    // drawContext.fillRect((i * barWidth) * 1.5, offset * 0.5, 2, (height + 0.25))\n    t += value\n  }\n  this.sampleBuffer[i] = this.getFrequencyValue(t / this.analyser.frequencyBinCount)\n  // this.index++\n  // Draw the time domain chart.\n  for (var i = 0; i < this.sampleBuffer.length; i++) {\n    var value = this.sampleBuffer[i] / 2\n    var percent = value / 256\n    var height = HEIGHT * percent\n    var offset = HEIGHT - height - 1\n    var barWidth = WIDTH / this.analyser.frequencyBinCount\n    // drawContext.fillStyle = 'rgba(233,233,233,0.5)'\n    // var hue = i / this.sampleBuffer.length * 360\n    var hue = i / this.analyser.frequencyBinCount * 360\n\n    drawContext.fillStyle = 'hsl(' + hue + ', 100%, 50%)'\n    drawContext.fillRect(i * (this.canvas.width / 100), HEIGHT - value, 4, this.sampleBuffer[i] > 2 ? (this.sampleBuffer[i] * 0.5) : 2)\n    // drawContext.fillRect(i * barWidth, offset, barWidth, 2)\n    // drawContext.fillRect(i * barWidth, offset, barWidth, height)\n    //\n  }\n\n// this.sampleBuffer.push()\n  if (this.isLive) {\n    requestAnimationFrame(this.draw.bind(this))\n  }\n}\n\nWebVoiceMail.prototype.getFrequencyValue = function (freq) {\n  var nyquist = context.sampleRate / 2\n  var index = Math.round(freq / nyquist * this.freqs.length)\n  return this.freqs[index]\n}\n\nVisualizerSample.prototype.monitorTime = function () {\n  console.log('context time: %s, buffer duration', context.currentTime, this.buffer.duration)\n\n  requestAnimationFrame(this.time.bind(this))\n}\n\nWebVoiceMail.prototype.sample = function (time) {\n\n  var freqs = new Uint8Array(this.analyser.frequencyBinCount)\n  var times = new Uint8Array(this.analyser.frequencyBinCount)\n  var t = 0\n  for (var i = 0; i < this.analyser.frequencyBinCount; i++) {\n    var value = freqs[i]\n    // value = this.getFrequencyValue(value)//[i]\n    // var percent = value / 256\n    // var height = HEIGHT * percent\n    // var offset = HEIGHT - height - 1\n    // var barWidth = WIDTH / this.analyser.frequencyBinCount\n    // // var barWidth = this.freqs.length / this.analyser.frequencyBinCount\n    // var hue = i / this.analyser.frequencyBinCount * 360\n    // drawContext.fillStyle = 'hsl(' + hue + ', 100%, 50%)'\n    // drawContext.fillRect((i * barWidth) * 1.5, offset * 0.5, 2, (height + 0.25))\n    t += value\n  }\n  this.sampleBuffer[time] = this.getFrequencyValue(t / this.analyser.frequencyBinCount)\n  this.index++\n  // var sampleRate = context.sampleRate\n  // var index = Math.round(freq / sampleRate * this.freqs.length)\n  // return this.freqs[index]\n}\n\nWebVoiceMail.prototype.onError = function onStreamError (e) {\n  console.error(e)\n}\nvar image\nWebVoiceMail.prototype.captureCanvasImage = function () {\n  // this.canvas\n  image = this.canvas.toDataURL('image/png')\n  $('#snapshot').prop('src', image)\n}\n\nfunction VisualizerSample (config, cb) {\n  this.analyser = context.createAnalyser()\n\n  this.analyser.connect(context.destination)\n  this.analyser.minDecibels = config.minDecibels || -140\n  this.analyser.maxDecibels = config.maxDecibels || 0\n  loadSounds(this, {\n    buffer: config.source\n  }, onLoaded)\n  this.freqs = new Uint8Array(this.analyser.frequencyBinCount)\n  this.times = new Uint8Array(this.analyser.frequencyBinCount)\n\n  function onLoaded () {\n    // var button = document.querySelector('button')\n    // button.removeAttribute('disabled')\n    $('#playback-click').text('Play/pause')\n    $('#playback-click').prop('disabled', false)\n\n    return cb()\n  }\n\n  this.isPlaying = false\n  this.startTime = 0\n  this.startOffset = 0\n  this.index = 0\n  this.canvas = config.canvas\n}\n\n// Toggle playback\nVisualizerSample.prototype.togglePlayback = function () {\n  this.play()\n}\n\nVisualizerSample.prototype.play = function () {\n  // $('#rerecord').prop('disabled', true)\n  this.stop()\n\n  this.startTime = context.currentTime\n  console.log('started at', this.startOffset)\n  this.source = context.createBufferSource()\n  // Connect graph\n  this.source.onEnded = this.onEnded\n  this.source.connect(this.analyser)\n  this.source.buffer = this.buffer\n  this.source.loop = false\n  // Start playback, but make sure we stay in bound of the buffer.\n  this.source[this.source.start ? 'start' : 'noteOn'](0, this.startOffset % this.buffer.duration)\n  console.log('duration: ', this.buffer.duration)\n  // Start visualizer.\n  this.isPlaying = true\n  this.draw()\n  this.time()\n}\n\nVisualizerSample.prototype.time = function () {\n  console.log('context time: %s, buffer duration', context.currentTime, this.buffer.duration)\n\n  requestAnimationFrame(this.time.bind(this))\n}\n\nVisualizerSample.prototype.stop = function () {\n//   if (this.isPlaying) {\n  try {\n    this.source[this.source.stop ? 'stop' : 'noteOff'](0)\n    this.startOffset += context.currentTime - this.startTime\n    console.log('paused at', this.startOffset)\n  } catch (e) {\n\n  }\n//   }\n  this.startOffset = 0\n  this.isPlaying = false\n}\n\nVisualizerSample.prototype.disconnect = function () {\n  this.stop()\n  this.source.disconnect(0)\n  this.startOffset = 0\n}\n\nVisualizerSample.prototype.onEnded = function () {\n  console.log('stopping...')\n  this.stop()\n  // $('#rerecord').prop('disabled', false)\n  alert('done')\n}\n\nVisualizerSample.prototype.draw = function () {\n  this.analyser.smoothingTimeConstant = 0.8\n  this.analyser.fftSize = FFT_SIZE / 4\n\n  // Get the frequency data from the currently live stream\n  this.analyser.getByteFrequencyData(this.freqs)\n  this.analyser.getByteTimeDomainData(this.times)\n\n  var width = Math.floor(1 / this.freqs.length, 10)\n  // var width = Math.floor(1 / this.freqs.length, 10)\n\n  // var canvas = document.querySelector('canvas')\n  var drawContext = this.canvas.getContext('2d')\n\n  this.canvas.width = WIDTH * 1.5\n  this.canvas.height = HEIGHT\n  // Draw the frequency domain chart.\n  for (var i = 0; i < this.analyser.frequencyBinCount; i++) {\n    var value = this.freqs[i]\n    // value = this.getFrequencyValue(value);//[i]\n\n    var percent = value / 256\n    var height = HEIGHT * percent\n    var offset = HEIGHT - height - 1\n    var barWidth = WIDTH / this.analyser.frequencyBinCount\n    // var barWidth = this.freqs.length / this.analyser.frequencyBinCount\n    var hue = i / this.analyser.frequencyBinCount * 360\n    drawContext.fillStyle = 'hsl(' + hue + ', 100%, 50%)'\n    drawContext.fillRect((i * barWidth) * 1.5, offset * 0.5, 2, (height + 0.25))\n  }\n\n  // if (this.isPlaying) {\n  requestAnimationFrame(this.draw.bind(this))\n  // }\n}\nVisualizerSample.prototype.getFrequencyValue = function (freq) {\n  var nyquist = context.sampleRate / 2\n  var index = Math.round(freq / nyquist * this.freqs.length)\n  return this.freqs[index]\n}\n\nif (false /* for Microsoft Edge */) {\n//            cameraPreview.parentNode.innerHTML = '<audio id=\"camera-preview\" controls style=\"border: 1px solid rgb(15, 158, 238); width: 94%;\"></audio> '\n}\n\nfunction initAudio () {\n  startRecording.disabled = false\n  stopRecording.disabled = true\n  playButton.disabled = true\n  deleteRecordingButton.disabled = true\n\n  if (sample) { sample.disconnect() }\n\n  navigator.getUserMedia({\n    audio: true,\n    video: false\n  }, function (stream) {\n    mediaStream = stream\n    liveSample = new WebVoiceMail({type: 'live-audio', source: stream, canvas: liveAudioCanvas})\n    liveSample.draw()\n  }, function (error) {\n    alert(JSON.stringify(error))\n  })\n  cameraPreview.onEnded = function () { alert('done') }\n}\n\nstartRecording.onclick = function () {\n  // initAudio()\n  startRecording.disabled = true\n  playButton.disabled = true\n  deleteRecordingButton.disabled = true\n  $('.status.on').text('Recording....').addClass('recording')\n  // if (!recordAudio) {\n\n  recordAudio = RecordRTC(liveSample.mediaStream, {\n    type: 'audio',\n    recorderType: StereoAudioRecorder,\n    onAudioProcessStarted: function () {\n      // recordVideo.startRecording()\n      cameraPreview.src = window.URL.createObjectURL(mediaStream)\n      cameraPreview.play()\n      cameraPreview.muted = true\n      cameraPreview.controls = false\n      showProgress()\n      // _clearInterval = setInterval(showProgress, 1000)\n    }\n  })\n  // }\n  recordAudio.setRecordingDuration(45000, liveSample.onEnded)\n  recordAudio.startRecording()\n  currentTime = recordAudio.recordingDuration\n  stopRecording.disabled = false\n}\nvar duration = 45\nvar start = null\nvar imageCaptured = false\nfunction showProgress (timestamp) {\n  if (!start) {\n    start = Date.now()\n    liveSample.sample(0)\n  }\n  // console.log()\n  var diff = Date.now() - start\n  var current = (Math.floor(diff) / 500) >> 0\n\n  liveSample.sample(current)\n  if (current !== time) {\n    time = current\n    // console.log(time, timestamp)\n    $('.time-remaining').text((duration - time) + ' seconds')\n  }\n\n  if (time > (duration / 2) && !imageCaptured) {\n    // liveSample.captureCanvasImage()\n    // imageCaptured = true\n  }\n  // duration--\n  // time += timestamp\n\n  requestAnimationFrame(showProgress)\n\n}\n\nstopRecording.onclick = function () {\n  endRecording()\n}\n\nplayButton.onclick = function () {\n  sample.togglePlayback()\n}\nvar recordingKey = null\nvar fileName = null\ndeleteRecordingButton.onclick = function () {\n  // $('#start-recording').trigger('click')\n  // sample.togglePlayback()\n  // sample.startOffset = sample.buffer.duration / 2\n  // sample.play()\n  // initAudio()\n  $.ajax({\n    // method: 'POST',\n    method: 'DELETE',\n    url: '/voice-mail/' + recordingKey,\n    data: {key: recordingKey, fileName: fileName}\n  })\n  .done(function (msg) {\n    window.location.href = window.location.href\n  })\n  // $.ajax({method:'POST',})\n\n}\n\nsocketio.on('merged', function (payload) {\n  var _fileName = payload.fileName\n  var key = payload.key\n  var href = (location.href.split('/').pop().length ? location.href.replace(location.href.split('/').pop(), '') : location.href)\n  href = href + 'uploads/' + _fileName\n  console.log('got file ' + href)\n  sample = new VisualizerSample({source: href, canvas: liveAudioCanvas}, function () {\n    startRecording.disabled = true\n    playButton.disabled = false\n    deleteRecordingButton.disabled = false\n    recordingKey = key\n    fileName = _fileName\n    console.log(key, fileName)\n    // $('#delete-upload-btn').data('recording-key', key)\n  })\n})\n\nsocketio.on('ffmpeg-output', function (result) {\n  if (parseInt(result) >= 100) {\n    progressBar.parentNode.style.display = 'none'\n    return\n  }\n  progressBar.parentNode.style.display = 'block'\n  progressBar.value = result\n//   percentage.innerHTML = 'Ffmpeg Progress ' + result + '%'\n})\nsocketio.on('ffmpeg-error', function (error) {\n  alert(error)\n})\n\nfunction endRecording () {\n  if (!liveSample.isLive) {\n    console.log('Recording stopped.')\n    return\n  }\n  // liveSample.captureCanvasImage()\n  $('.status.on.recording').text('Recording stopped').removeClass('recording')\n  startRecording.disabled = false\n  stopRecording.disabled = true\n  // cameraPreview.stop()\n  cameraPreview.poster = 'ajax-loader.gif'\n  liveSample.stop()\n\n  recordAudio.stopRecording(function () {\n    // get audio data-URL\n    recordAudio.getDataURL(function (audioDataURL) {\n      var files = {\n        audio: {\n          type: recordAudio.getBlob().type || 'audio/wav',\n          dataURL: audioDataURL,\n          image: image,\n          email: 'epmiller8464@gmail.com',\n          waveForm: liveSample.sampleBuffer\n        }\n      }\n      socketio.emit('message', files)\n      // if (mediaStream)\n      //   mediaStream.stop()\n      cameraPreview.src = ''\n    })\n  })\n}"]}