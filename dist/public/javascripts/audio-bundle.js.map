{"version":3,"sources":["../../../public/javascripts/audio-bundle.js"],"names":["context","window","AudioContext","webkitAudioContext","createGain","createGainNode","createDelay","createDelayNode","createScriptProcessor","createJavaScriptNode","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","bytesToSize","bytes","k","sizes","i","parseInt","Math","floor","log","pow","toPrecision","playSound","buffer","time","source","createBufferSource","connect","destination","start","loadSounds","obj","soundMap","names","paths","name","path","push","bufferLoader","BufferLoader","bufferList","length","load","urlList","onload","Array","loadCount","prototype","loadBuffer","url","index","request","XMLHttpRequest","open","responseType","loader","decodeAudioData","response","alert","error","console","onerror","send","WIDTH","HEIGHT","SMOOTHING","FFT_SIZE","WebVoiceMail","config","cb","mediaStream","input","createMediaStreamSource","filter","createBiquadFilter","frequency","value","type","Q","analyser","createAnalyser","freqs","Uint8Array","frequencyBinCount","times","sampleBuffer","isLive","startTime","startOffset","maxTime","canvas","togglePlayback","play","currentTime","loop","duration","onEnded","draw","bind","stop","disconnect","cameraPreview","src","e","smoothingTimeConstant","fftSize","getByteFrequencyData","getByteTimeDomainData","width","drawContext","getContext","height","percent","offset","barWidth","hue","fillStyle","fillRect","getFrequencyValue","freq","nyquist","sampleRate","round","sample","onError","onStreamError","captureCanvasImage","$","prop","toDataURL","click","liveSample","VisualizerSample","minDecibels","maxDecibels","onLoaded","text","isPlaying","socketio","io","on","startRecording","disabled","document","getElementById","stopRecording","playButton","deleteButton","progressBar","querySelector","percentage","liveAudioCanvas","playbackAudioCanvas","recordAudio","recordVideo","initAudio","navigator","getUserMedia","audio","video","stream","JSON","stringify","onclick","RecordRTC","recorderType","StereoAudioRecorder","onAudioProcessStarted","URL","createObjectURL","muted","controls","poster","getDataURL","audioDataURL","files","getBlob","dataURL","emit","fileName","href","location","split","pop","replace","result","parentNode","style","display","innerHTML"],"mappings":"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","file":"audio-bundle.js","sourcesContent":["// Start off by initializing a new context.\ncontext = new (window.AudioContext || window.webkitAudioContext)()\n\nif (!context.createGain) { context.createGain = context.createGainNode }\nif (!context.createDelay) { context.createDelay = context.createDelayNode }\nif (!context.createScriptProcessor) { context.createScriptProcessor = context.createJavaScriptNode }\n\n// shim layer with setTimeout fallback\nwindow.requestAnimFrame = (function () {\n  return window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    function (callback) {\n      window.setTimeout(callback, 1000 / 60)\n    }\n})()\n\nfunction bytesToSize (bytes) {\n  var k = 1000\n  var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\n  if (bytes === 0) {\n    return '0 Bytes'\n  }\n  var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10)\n  return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i]\n}\n\nfunction playSound (buffer, time) {\n  var source = context.createBufferSource()\n  source.buffer = buffer\n  source.connect(context.destination)\n  source[source.start ? 'start' : 'noteOn'](time)\n}\n\nfunction loadSounds (obj, soundMap, callback) {\n  // Array-ify\n  var names = []\n  var paths = []\n  for (var name in soundMap) {\n    var path = soundMap[name]\n    names.push(name)\n    paths.push(path)\n  }\n  bufferLoader = new BufferLoader(context, paths, function (bufferList) {\n    for (var i = 0; i < bufferList.length; i++) {\n      var buffer = bufferList[i]\n      var name = names[i]\n      obj[name] = buffer\n    }\n    if (callback) {\n      callback()\n    }\n  })\n  bufferLoader.load()\n}\n\nfunction BufferLoader (context, urlList, callback) {\n  this.context = context\n  this.urlList = urlList\n  this.onload = callback\n  this.bufferList = new Array()\n  this.loadCount = 0\n}\n\nBufferLoader.prototype.loadBuffer = function (url, index) {\n  // Load buffer asynchronously\n  var request = new XMLHttpRequest()\n  request.open('GET', url, true)\n  request.responseType = 'arraybuffer'\n\n  var loader = this\n\n  request.onload = function () {\n    // Asynchronously decode the audio file data in request.response\n    loader.context.decodeAudioData(\n      request.response,\n      function (buffer) {\n        if (!buffer) {\n          alert('error decoding file data: ' + url)\n          return\n        }\n        loader.bufferList[index] = buffer\n        if (++loader.loadCount == loader.urlList.length) { loader.onload(loader.bufferList) }\n      },\n      function (error) {\n        console.error('decodeAudioData error', error)\n      }\n    )\n  }\n\n  request.onerror = function () {\n    alert('BufferLoader: XHR error')\n  }\n\n  request.send()\n}\n\nBufferLoader.prototype.load = function () {\n  for (var i = 0; i < this.urlList.length; ++i) { this.loadBuffer(this.urlList[i], i) }\n}\n\n/*\n * Copyright 2013 Boris Smus. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar WIDTH = 640\nvar HEIGHT = 230\n\n// Interesting parameters to tweak!\nvar SMOOTHING = 0.85\n// var FFT_SIZE = 2048 << 0x01\nvar FFT_SIZE = 1024\n// var FFT_SIZE = 2048 / 2\n\nfunction WebVoiceMail (config, cb) {\n\n  this.mediaStream = config.source\n  this.input = context.createMediaStreamSource(this.mediaStream)\n  // Connect the input to a filter.\n  this.filter = context.createBiquadFilter()\n  this.filter.frequency.value = 60.0\n  this.filter.type = 'notch'\n  this.filter.Q = 10.0\n\n  this.analyser = context.createAnalyser()\n  // Connect graph.\n  this.input.connect(this.filter)\n  this.filter.connect(this.analyser)\n\n  this.freqs = new Uint8Array(this.analyser.frequencyBinCount)\n  this.times = new Uint8Array(this.analyser.frequencyBinCount)\n  this.sampleBuffer = new Uint8Array(this.analyser.frequencyBinCount)\n  this.isLive = true\n  this.startTime = 0\n  this.startOffset = 0\n  this.maxTime = 45000\n  this.canvas = config.canvas\n  return this\n}\n\n// Toggle playback\nWebVoiceMail.prototype.togglePlayback = function () {\n  this.play()\n}\n\nWebVoiceMail.prototype.play = function () {\n  // $('#rerecord').prop('disabled', true)\n  // this.stop()\n\n  this.startTime = context.currentTime\n  console.log('started at', this.startOffset)\n  this.source = context.createBufferSource()\n  // Connect graph\n  this.source.connect(this.analyser)\n  this.source.buffer = this.buffer\n  this.source.loop = false\n  // Start playback, but make sure we stay in bound of the buffer.\n  this.source[this.source.start ? 'start' : 'noteOn'](0, this.startOffset % this.buffer.duration)\n  // Start visualizer.\n  this.isLive = true\n\n  this.source.onEnded = this.onEnded\n  requestAnimationFrame(this.draw.bind(this))\n}\n\nWebVoiceMail.prototype.stop = function () {\n//   if (this.isLive) {\n  try {\n    // this.source[this.source.stop ? 'stop' : 'noteOff'](0)\n    this.mediaStream.stop()\n    this.input.disconnect(0)\n    this.filter.disconnect(0)\n    cameraPreview.src = ''\n    // cameraPreview.stop()\n\n    this.startOffset = 0// += context.currentTime - this.startTime\n    console.log('stopped at', context.currentTime)\n  } catch (e) {\n  }\n\n  this.startOffset = 0\n  this.isLive = false\n}\n\nWebVoiceMail.prototype.disconnect = function () {\n  this.stop()\n  this.input.disconnect(0)\n  this.startOffset = 0\n}\n\nWebVoiceMail.prototype.onEnded = function () {\n  // this.stop()\n  // $('#rerecord').prop('disabled', false)\n  console.log('the stream ended do something')\n}\n\nWebVoiceMail.prototype.draw = function () {\n  this.analyser.smoothingTimeConstant = SMOOTHING\n  this.analyser.fftSize = FFT_SIZE / 4\n\n  // Get the frequency data from the currently live stream\n  this.analyser.getByteFrequencyData(this.freqs)\n  this.analyser.getByteTimeDomainData(this.times)\n\n  var width = Math.floor(1 / this.freqs.length, 10)\n  // var width = Math.floor(1 / this.freqs.length, 10)\n\n  // var canvas = document.querySelector('canvas')\n  var drawContext = this.canvas.getContext('2d')\n\n  this.canvas.width = WIDTH * 1.5\n  this.canvas.height = HEIGHT\n  // Draw the frequency domain chart.\n  for (var i = 0; i < this.analyser.frequencyBinCount; i++) {\n    var value = this.freqs[i]\n    // value = this.getFrequencyValue(value);//[i]\n    var percent = value / 256\n    var height = HEIGHT * percent\n    var offset = HEIGHT - height - 1\n    var barWidth = WIDTH / this.analyser.frequencyBinCount\n    // var barWidth = this.freqs.length / this.analyser.frequencyBinCount\n    var hue = i / this.analyser.frequencyBinCount * 360\n    drawContext.fillStyle = 'hsl(' + hue + ', 100%, 50%)'\n    drawContext.fillRect((i * barWidth) * 1.5, offset * 0.5, 2, (height + 0.25))\n  }\n\n  // // Draw the time domain chart.\n  // for (var i = 0; i < this.analyser.frequencyBinCount; i++) {\n  //   var value = this.times[i]\n  //   var percent = value / 256\n  //   var height = HEIGHT * percent\n  //   var offset = HEIGHT - height - 1\n  //   var barWidth = WIDTH / this.analyser.frequencyBinCount\n  //   drawContext.fillStyle = 'white'\n  //   drawContext.fillRect(i * barWidth, offset, 1, 2)\n  //   // drawContext.fillRect(i * barWidth, offset, barWidth, 2)\n  //   // drawContext.fillRect(i * barWidth, offset, barWidth, height)\n  //   //\n  // }\n\n  if (this.isLive) {\n    requestAnimationFrame(this.draw.bind(this))\n  }\n}\n\nWebVoiceMail.prototype.getFrequencyValue = function (freq) {\n  var nyquist = context.sampleRate / 2\n  var index = Math.round(freq / nyquist * this.freqs.length)\n  return this.freqs[index]\n}\n\nWebVoiceMail.prototype.sample = function (freq) {\n  var sampleRate = context.sampleRate\n  var index = Math.round(freq / sampleRate * this.freqs.length)\n  return this.freqs[index]\n}\n\nWebVoiceMail.prototype.onError = function onStreamError (e) {\n  console.error(e)\n}\n\nWebVoiceMail.prototype.captureCanvasImage = function () {\n  // this.canvas\n  $('#captured').prop('src', this.canvas.toDataURL('image/png'))\n}\n$('#snap').click(function () {\n  liveSample.captureCanvasImage()\n})\nfunction VisualizerSample (config, cb) {\n\n  this.analyser = context.createAnalyser()\n\n  this.analyser.connect(context.destination)\n  this.analyser.minDecibels = config.minDecibels || -140\n  this.analyser.maxDecibels = config.maxDecibels || 0\n  loadSounds(this, {\n    buffer: config.source\n  }, onLoaded)\n  this.freqs = new Uint8Array(this.analyser.frequencyBinCount)\n  this.times = new Uint8Array(this.analyser.frequencyBinCount)\n\n  function onLoaded () {\n    // var button = document.querySelector('button')\n    // button.removeAttribute('disabled')\n    $('#playback-click').text('Play/pause')\n    $('#playback-click').prop('disabled', false)\n\n    return cb()\n  }\n\n  this.isPlaying = false\n  this.startTime = 0\n  this.startOffset = 0\n  this.canvas = config.canvas\n}\n\n// Toggle playback\nVisualizerSample.prototype.togglePlayback = function () {\n  this.play()\n}\n\nVisualizerSample.prototype.play = function () {\n  // $('#rerecord').prop('disabled', true)\n  this.stop()\n\n  this.startTime = context.currentTime\n  console.log('started at', this.startOffset)\n  this.source = context.createBufferSource()\n  // Connect graph\n  this.source.onEnded = this.onEnded\n  this.source.connect(this.analyser)\n  this.source.buffer = this.buffer\n  this.source.loop = false\n  // Start playback, but make sure we stay in bound of the buffer.\n  this.source[this.source.start ? 'start' : 'noteOn'](0, this.startOffset % this.buffer.duration)\n  // Start visualizer.\n  this.isPlaying = true\n\n  requestAnimationFrame(this.draw.bind(this))\n}\n\nVisualizerSample.prototype.stop = function () {\n//   if (this.isPlaying) {\n  try {\n    this.source[this.source.stop ? 'stop' : 'noteOff'](0)\n    this.startOffset += context.currentTime - this.startTime\n    console.log('paused at', this.startOffset)\n  } catch (e) {\n\n  }\n//   }\n  this.startOffset = 0\n  this.isPlaying = false\n}\n\nVisualizerSample.prototype.disconnect = function () {\n  this.stop()\n  this.source.disconnect(0)\n  this.startOffset = 0\n}\n\nVisualizerSample.prototype.onEnded = function () {\n  this.stop()\n  // $('#rerecord').prop('disabled', false)\n  alert('done')\n}\n\nVisualizerSample.prototype.draw = function () {\n  this.analyser.smoothingTimeConstant = 0.8\n  this.analyser.fftSize = FFT_SIZE / 4\n\n  // Get the frequency data from the currently live stream\n  this.analyser.getByteFrequencyData(this.freqs)\n  this.analyser.getByteTimeDomainData(this.times)\n\n  var width = Math.floor(1 / this.freqs.length, 10)\n  // var width = Math.floor(1 / this.freqs.length, 10)\n\n  // var canvas = document.querySelector('canvas')\n  var drawContext = this.canvas.getContext('2d')\n\n  this.canvas.width = WIDTH * 1.5\n  this.canvas.height = HEIGHT\n  // Draw the frequency domain chart.\n  for (var i = 0; i < this.analyser.frequencyBinCount; i++) {\n    var value = this.freqs[i]\n    // value = this.getFrequencyValue(value);//[i]\n    var percent = value / 256\n    var height = HEIGHT * percent\n    var offset = HEIGHT - height - 1\n    var barWidth = WIDTH / this.analyser.frequencyBinCount\n    // var barWidth = this.freqs.length / this.analyser.frequencyBinCount\n    var hue = i / this.analyser.frequencyBinCount * 360\n    drawContext.fillStyle = 'hsl(' + hue + ', 100%, 50%)'\n    drawContext.fillRect((i * barWidth) * 1.5, offset * 0.5, 2, (height + 0.25))\n  }\n\n  // // Draw the time domain chart.\n  // for (var i = 0; i < this.analyser.frequencyBinCount; i++) {\n  //   var value = this.times[i]\n  //   var percent = value / 256\n  //   var height = HEIGHT * percent\n  //   var offset = HEIGHT - height - 1\n  //   var barWidth = WIDTH / this.analyser.frequencyBinCount\n  //   drawContext.fillStyle = 'white'\n  //   drawContext.fillRect(i * barWidth, offset, 1, 2)\n  //   // drawContext.fillRect(i * barWidth, offset, barWidth, 2)\n  //   // drawContext.fillRect(i * barWidth, offset, barWidth, height)\n  //   //\n  // }\n\n  if (this.isPlaying) {\n    requestAnimationFrame(this.draw.bind(this))\n  }\n}\nVisualizerSample.prototype.getFrequencyValue = function (freq) {\n  var nyquist = context.sampleRate / 2\n  var index = Math.round(freq / nyquist * this.freqs.length)\n  return this.freqs[index]\n}\n\nif (false /* for Microsoft Edge */) {\n//            cameraPreview.parentNode.innerHTML = '<audio id=\"camera-preview\" controls style=\"border: 1px solid rgb(15, 158, 238); width: 94%;\"></audio> '\n}\n\nvar socketio = io()\nvar mediaStream = null\nsocketio.on('connect', function () {\n  startRecording.disabled = false\n})\nvar startRecording = document.getElementById('record-btn')\nvar stopRecording = document.getElementById('stop-recording-btn')\nvar playButton = document.getElementById('play-btn')\nvar deleteButton = document.getElementById('delete-btn')\nvar cameraPreview = document.getElementById('camera-preview')\nvar progressBar = document.querySelector('#progress-bar')\nvar percentage = document.querySelector('#percentage')\nvar liveAudioCanvas = document.querySelector('#live-audio-canvas')\nvar playbackAudioCanvas = document.querySelector('#playback-audio-canvas')\nvar recordAudio\nvar recordVideo\nvar sample\nvar liveSample\n\nfunction initAudio () {\n  startRecording.disabled = false\n  stopRecording.disabled = true\n  playButton.disabled = true\n  deleteButton.disabled = true\n\n  if (sample) { sample.disconnect() }\n\n  navigator.getUserMedia({\n    audio: true,\n    video: false\n  }, function (stream) {\n    mediaStream = stream\n    liveSample = new WebVoiceMail({type: 'live-audio', source: stream, canvas: liveAudioCanvas})\n    liveSample.draw()\n  }, function (error) {\n    alert(JSON.stringify(error))\n  })\n  cameraPreview.onEnded = function () {alert('done')}\n}\n\nstartRecording.onclick = function () {\n  // initAudio()\n  startRecording.disabled = true\n  playButton.disabled = true\n  deleteButton.disabled = true\n  // if (!recordAudio) {\n\n    recordAudio = RecordRTC(liveSample.mediaStream, {\n      type: 'audio',\n      recorderType: StereoAudioRecorder,\n      onAudioProcessStarted: function () {\n        // recordVideo.startRecording()\n        cameraPreview.src = window.URL.createObjectURL(mediaStream)\n        cameraPreview.play()\n        cameraPreview.muted = true\n        cameraPreview.controls = false\n      }\n    })\n  // }\n\n  recordAudio.startRecording()\n  stopRecording.disabled = false\n}\nstopRecording.onclick = function () {\n  startRecording.disabled = false\n  stopRecording.disabled = true\n  // stop audio recorder\n  // recordAudio.stopRecording(function () {\n  //   // stop video recorder\n  //   recordVideo.stopRecording(function () {\n  //     // get audio data-URL\n  //     recordAudio.getDataURL(function (audioDataURL) {\n  //       // get video data-URL\n  //       recordVideo.getDataURL(function (videoDataURL) {\n  //         var files = {\n  //           audio: {\n  //             type: recordAudio.getBlob().type || 'audio/wav',\n  //             dataURL: audioDataURL\n  //           },\n  //           video: {\n  //             type: recordVideo.getBlob().type || 'video/webm',\n  //             dataURL: videoDataURL\n  //           }\n  //         }\n  //         socketio.emit('message', files)\n  //         if (mediaStream) mediaStream.stop()\n  //       })\n  //     })\n  //     cameraPreview.src = ''\n  //     cameraPreview.poster = 'ajax-loader.gif'\n  //   })\n  // })\n  // if firefox or if you want to record only audio\n  // stop audio recorder\n\n  // cameraPreview.stop()\n  cameraPreview.poster = 'ajax-loader.gif'\n  recordAudio.stopRecording(function () {\n    // get audio data-URL\n    recordAudio.getDataURL(function (audioDataURL) {\n      var files = {\n        audio: {\n          type: recordAudio.getBlob().type || 'audio/wav',\n          dataURL: audioDataURL\n        }\n      }\n      socketio.emit('message', files)\n      // if (mediaStream)\n      //   mediaStream.stop()\n      liveSample.stop()\n      cameraPreview.src = ''\n    })\n\n  })\n}\n\nplayButton.onclick = function () {\n  sample.togglePlayback()\n}\n\ndeleteButton.onclick = function () {\n  // $('#start-recording').trigger('click')\n  // sample.togglePlayback()\n  initAudio()\n}\n\nsocketio.on('merged', function (fileName) {\n  var href = (location.href.split('/').pop().length ? location.href.replace(location.href.split('/').pop(), '') : location.href)\n  href = href + 'uploads/' + fileName\n  console.log('got file ' + href)\n  sample = new VisualizerSample({source: href, canvas: liveAudioCanvas}, function () {\n    startRecording.disabled = true\n    playButton.disabled = false\n    deleteButton.disabled = false\n  })\n})\n\nsocketio.on('ffmpeg-output', function (result) {\n  if (parseInt(result) >= 100) {\n    progressBar.parentNode.style.display = 'none'\n    return\n  }\n  progressBar.parentNode.style.display = 'block'\n  progressBar.value = result\n  percentage.innerHTML = 'Ffmpeg Progress ' + result + '%'\n})\nsocketio.on('ffmpeg-error', function (error) {\n  alert(error)\n})\n"]}