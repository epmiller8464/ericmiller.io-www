{"version":3,"sources":["../../../public/javascripts/visualizer-sample.js"],"names":["WIDTH","HEIGHT","SMOOTHING","FFT_SIZE","VisualizerSample","url","cb","analyser","context","createAnalyser","connect","destination","minDecibels","maxDecibels","loadSounds","buffer","onLoaded","freqs","Uint8Array","frequencyBinCount","times","button","document","querySelector","removeAttribute","innerHTML","isLive","startTime","startOffset","prototype","togglePlayback","source","stop","currentTime","console","log","createBufferSource","loop","start","duration","requestAnimFrame","draw","bind","smoothingTimeConstant","fftSize","getByteFrequencyData","getByteTimeDomainData","width","Math","floor","length","canvas","drawContext","getContext","height","i","value","percent","offset","barWidth","hue","fillStyle","fillRect","getFrequencyValue","freq","nyquist","sampleRate","index","round"],"mappings":"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","file":"visualizer-sample.js","sourcesContent":["/*\n * Copyright 2013 Boris Smus. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar WIDTH = 640\nvar HEIGHT = 360\n\n// Interesting parameters to tweak!\nvar SMOOTHING = 0.8\nvar FFT_SIZE = 2048\n\nfunction VisualizerSample (url, cb) {\n  this.analyser = context.createAnalyser()\n\n  this.analyser.connect(context.destination)\n  this.analyser.minDecibels = -140\n  this.analyser.maxDecibels = 0\n  loadSounds(this, {\n    buffer: url\n  }, onLoaded)\n  this.freqs = new Uint8Array(this.analyser.frequencyBinCount)\n  this.times = new Uint8Array(this.analyser.frequencyBinCount)\n\n  function onLoaded () {\n    var button = document.querySelector('button')\n    button.removeAttribute('disabled')\n    button.innerHTML = 'Play/pause'\n    return cb()\n  }\n\n  this.isLive = false\n  this.startTime = 0\n  this.startOffset = 0\n}\n\n// Toggle playback\nVisualizerSample.prototype.togglePlayback = function () {\n  if (this.isLive) {\n    // Stop playback\n    this.source[this.source.stop ? 'stop' : 'noteOff'](0)\n    this.startOffset += context.currentTime - this.startTime\n    console.log('paused at', this.startOffset)\n    // Save the position of the play head.\n  } else {\n    this.startTime = context.currentTime\n    console.log('started at', this.startOffset)\n    this.source = context.createBufferSource()\n    // Connect graph\n    this.source.connect(this.analyser)\n    this.source.buffer = this.buffer\n    this.source.loop = true\n    // Start playback, but make sure we stay in bound of the buffer.\n    this.source[this.source.start ? 'start' : 'noteOn'](0, this.startOffset % this.buffer.duration)\n    // Start visualizer.\n    requestAnimFrame(this.draw.bind(this))\n  }\n  this.isLive = !this.isLive\n}\n\nVisualizerSample.prototype.draw = function () {\n  this.analyser.smoothingTimeConstant = SMOOTHING\n  this.analyser.fftSize = FFT_SIZE\n\n  // Get the frequency data from the currently playing music\n  this.analyser.getByteFrequencyData(this.freqs)\n  this.analyser.getByteTimeDomainData(this.times)\n\n  var width = Math.floor(1 / this.freqs.length, 10)\n\n  var canvas = document.querySelector('canvas')\n  var drawContext = canvas.getContext('2d')\n  canvas.width = WIDTH\n  canvas.height = HEIGHT\n  // Draw the frequency domain chart.\n  for (var i = 0; i < this.analyser.frequencyBinCount; i++) {\n    var value = this.freqs[i]\n    var percent = value / 256\n    var height = HEIGHT * percent\n    var offset = HEIGHT - height - 1\n    var barWidth = WIDTH / this.analyser.frequencyBinCount\n    var hue = i / this.analyser.frequencyBinCount * 360\n    drawContext.fillStyle = 'hsl(' + hue + ', 100%, 50%)'\n    drawContext.fillRect(i * barWidth, offset, barWidth, height)\n  }\n\n  // Draw the time domain chart.\n  for (var i = 0; i < this.analyser.frequencyBinCount; i++) {\n    var value = this.times[i]\n    var percent = value / 256\n    var height = HEIGHT * percent\n    var offset = HEIGHT - height - 1\n    var barWidth = WIDTH / this.analyser.frequencyBinCount\n    drawContext.fillStyle = 'white'\n    drawContext.fillRect(i * barWidth, offset, 1, 2)\n  }\n\n  if (this.isLive) {\n    requestAnimFrame(this.draw.bind(this))\n  }\n}\n\nVisualizerSample.prototype.getFrequencyValue = function (freq) {\n  var nyquist = context.sampleRate / 2\n  var index = Math.round(freq / nyquist * this.freqs.length)\n  return this.freqs[index]\n}\n"]}