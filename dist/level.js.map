{"version":3,"sources":["../level.js"],"names":["module","exports","name","options","db","require","encoding","valueEncoding","level","put","key","value","cb","err","console","error","get","del","createReadStream","keys","values"],"mappings":"AAAA;;AACAA,OAAOC,OAAP,GAAiB,UAAUC,IAAV,EAA8B;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAC7C,MAAMC,KAAKC,QAAQ,MAAR,EAAgBH,IAAhB,EAAsBC,OAAtB,CAAX;AACA,MAAIG,WAAW,EAACC,eAAeJ,QAAQG,QAAR,IAAoB,MAApC,EAAf;AACA,MAAME,QAAQ;AACZC,OADY,eACPC,GADO,EACFC,KADE,EACKC,EADL,EACS;AACnBR,SAAGK,GAAH,CAAOC,GAAP,EAAYC,KAAZ,EAAmBL,QAAnB,EAA6B,UAAUO,GAAV,EAAe;;AAE1C,YAAIA,GAAJ,EAAS;AACPC,kBAAQC,KAAR,CAAcF,GAAd;AACA,iBAAOD,GAAGC,GAAH,CAAP;AACD;AACD,eAAOD,GAAG,IAAH,EAAS,IAAT,CAAP;AACD,OAPD;AAQD,KAVW;AAWZI,OAXY,eAWPN,GAXO,EAWFE,EAXE,EAWE;AACZR,SAAGY,GAAH,CAAON,GAAP,EAAYJ,QAAZ,EAAsB,UAAUO,GAAV,EAAeF,KAAf,EAAsB;;AAE1C,YAAIE,GAAJ,EAAS;AACPC,kBAAQC,KAAR,CAAcF,GAAd;AACA,iBAAOD,GAAGC,GAAH,CAAP;AACD;AACD,eAAOD,GAAG,IAAH,EAASD,KAAT,CAAP;AACD,OAPD;AAQD,KApBW;AAqBZM,OArBY,eAqBPP,GArBO,EAqBFE,EArBE,EAqBE;AACZR,SAAGa,GAAH,CAAOP,GAAP,EAAY,UAAUG,GAAV,EAAe;;AAEzB,YAAIA,GAAJ,EAAS;AACPC,kBAAQC,KAAR,CAAcF,GAAd;AACA,iBAAOD,GAAGC,GAAH,CAAP;AACD;AACD,eAAOD,GAAG,IAAH,EAAS,IAAT,CAAP;AACD,OAPD;AAQD,KA9BW;AA+BZM,oBA/BY,kCA+BsB;AAAA,UAAfC,IAAe,QAAfA,IAAe;AAAA,UAATC,MAAS,QAATA,MAAS;;AAChC,aAAOhB,GAAGc,gBAAH,CAAoB,EAACC,UAAD,EAAOC,cAAP,EAApB,CAAP;AACD;AAjCW,GAAd;AAmCA,SAAO,EAACZ,YAAD,EAAP;AACD,CAvCD","file":"level.js","sourcesContent":["'use strict'\nmodule.exports = function (name, options = {}) {\n  const db = require('./db')(name, options)\n  let encoding = {valueEncoding: options.encoding || 'json'}\n  const level = {\n    put (key, value, cb) {\n      db.put(key, value, encoding, function (err) {\n\n        if (err) {\n          console.error(err)\n          return cb(err)\n        }\n        return cb(null, true)\n      })\n    },\n    get (key, cb) {\n      db.get(key, encoding, function (err, value) {\n\n        if (err) {\n          console.error(err)\n          return cb(err)\n        }\n        return cb(null, value)\n      })\n    },\n    del (key, cb) {\n      db.del(key, function (err) {\n\n        if (err) {\n          console.error(err)\n          return cb(err)\n        }\n        return cb(null, true)\n      })\n    },\n    createReadStream ({keys, values}) {\n      return db.createReadStream({keys, values})\n    }\n  }\n  return {level}\n}\n"]}