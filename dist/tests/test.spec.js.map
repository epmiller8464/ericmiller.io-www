{"version":3,"sources":["../../tests/test.spec.js"],"names":["process","env","NODE_ENV","require","config","describe","it","before","moment","assert","should","VoiceMessage","d","done","vm","createDate","format","fromEmail","save","err","doc","not","exist"],"mappings":"AAAA;;AACAA,QAAQC,GAAR,CAAYC,QAAZ,GAAuBF,QAAQC,GAAR,CAAYC,QAAZ,IAAwB,aAA/C;AACAC,QAAQ,QAAR,EAAkBC,MAAlB;;eAC+BD,QAAQ,OAAR,C;IAAxBE,Q,YAAAA,Q;IAAUC,E,YAAAA,E;IAAIC,M,YAAAA,M;;AACrB,IAAMC,SAASL,QAAQ,QAAR,CAAf;AACA,IAAMM,SAASN,QAAQ,QAAR,CAAf;AACA,IAAMO,SAASP,QAAQ,QAAR,CAAf;AACA;;gBAEuBA,QAAQ,cAAR,C;IAAhBQ,Y,aAAAA,Y;;AACPN,SAAS,IAAT,EAAe,YAAM;AACnBE,SAAO,EAAP,EAAW,UAACK,CAAD,EAAO;AAChBT,YAAQ,WAAR,EAAqB,YAAM;AACzBS;AACD,KAFD;AAGD,GAJD;AAKAN,KAAG,eAAH,EAAoB,UAACO,IAAD,EAAU;AAC5B,QAAIC,KAAK,IAAIH,YAAJ,CAAiB;AACxBI,kBAAYP,SAASQ,MAAT,CAAgB,QAAhB,CADY;AAExBC,iBAAW;AAFa,KAAjB,CAAT;;AAKAH,OAAGI,IAAH,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpBV,aAAOW,GAAP,CAAWC,KAAX,CAAiBH,GAAjB;AACAT,aAAOY,KAAP,CAAaF,GAAb;AACD,KAHD;AAIAP;AACD,GAXD;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CApDD","file":"test.spec.js","sourcesContent":["'use strict'\nprocess.env.NODE_ENV = process.env.NODE_ENV || 'development'\nrequire('dotenv').config()\nconst {describe, it, before} = require('mocha')\nconst moment = require('moment')\nconst assert = require('assert')\nconst should = require('should')\n// const {level} = require('../level')('vm', {valueEncoding: 'json'})\n\nconst {VoiceMessage} = require('../lib/model')\ndescribe('db', () => {\n  before('', (d) => {\n    require('../lib/db')(() => {\n      d()\n    })\n  })\n  it('voice-message', (done) => {\n    let vm = new VoiceMessage({\n      createDate: moment().format('LL LTS'),\n      fromEmail: 'epmiller8464@gamil.com',\n    })\n\n    vm.save((err, doc) => {\n      should.not.exist(err)\n      should.exist(doc)\n    })\n    done()\n  })\n  // it('put', (done) => {\n  //   level.put('key', {test: 'ing'}, (err, result) => {\n  //     should.not.exist(err)\n  //     should.exist(result)\n  //     done()\n  //   })\n  // })\n  // it('get', (done) => {\n  //   level.put('key', {test: 'ing'}, (err, result) => {\n  //     should.not.exist(err)\n  //     should.exist(result)\n  //     level.get('key', (err, result) => {\n  //\n  //       should.not.exist(err)\n  //       should.exist(result)\n  //       should(result.test).equal('ing')\n  //       console.log(result)\n  //       done()\n  //     })\n  //   })\n  //\n  // })\n  // it('delete', (done) => {\n  //   level.put('key', {test: 'ing'}, (err, result) => {\n  //     should.not.exist(err)\n  //     should.exist(result)\n  //     level.del('key', (err, result) => {\n  //       should.not.exist(err)\n  //       should.exist(result)\n  //       done()\n  //     })\n  //   })\n  //\n  // })\n})"]}