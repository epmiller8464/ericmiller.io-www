{"version":3,"sources":["../../routes/voicemail.js"],"names":["express","require","router","Router","VoiceMessage","CallLog","createSignedUrl","nets","level","createAudioSignature","moment","csurf","cookie","twiml","MessagingResponse","VoiceResponse","ch","get","req","res","next","links","find","isTemp","err","docs","render","title","images","map","vm","toObject","waveForm","key","push","filter","i","v","reverse","surl","meta","Key","_id","image","audio_path","join","site_key","process","env","RECAPTCHA_SITE_KEY","csrfToken","post","body","response","remoteip","ip","email","status","json","error","validateSubmitter","result","success","token","challenge_ts","put","jwtid","e","delete","fileName","call","console","log","Direction","writeHead","end","cl","phone_number","From","from_country","FromCountry","timestamp","Timestamp","valueOf","call_sid","CallSid","call_meta","save","doc","emit","say","voice","language","loop","record","transcribe","hangup","toString","message","recaptcha","cb","url","RECAPTCHA_SECRET","request","method","encoding","undefined","JSON","parse","module","exports"],"mappings":"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","file":"voicemail.js","sourcesContent":["'use strict'\nvar express = require('express')\nvar router = express.Router()\nconst {VoiceMessage, CallLog} = require('../lib/model')\nconst {createSignedUrl} = require('../lib/authorization')\nconst nets = require('nets')\nconst {level} = require('../level')('tokens')\nconst {createAudioSignature} = require('../lib/token')\nconst moment = require('moment')\nvar csurf = require('csurf')({cookie: true})\nconst {MessagingResponse, VoiceResponse} = require('twilio').twiml\nconst ch = require('../lib/callHandler')()\nrouter.get('/', csurf, function (req, res, next) {\n  let links = []\n  VoiceMessage.find({isTemp: false}, (err, docs) => {\n    // let value = JSON.parse(data.value)\n    if (err) res.render('voicemail', {title: 'Express', images: []})\n    links = docs.map((vm) => {return vm.toObject()}).map((vm) => {\n      let waveForm = []\n      for (var key in vm.waveForm) {\n        if (vm.waveForm[key])\n          waveForm.push(vm.waveForm[key])\n      }\n      waveForm = waveForm.filter((i, v) => {if (v) return v }).reverse()\n      let surl = createSignedUrl(vm.meta.Key)\n      return {key: vm._id, image: vm.image, audio_path: surl, waveForm: waveForm.join(',')}\n    })\n    res.render('voicemail', {\n      title: 'Express',\n      images: links,\n      site_key: process.env.RECAPTCHA_SITE_KEY,\n      csrfToken: req.csrfToken()\n    })\n  })\n})\n\nrouter.post('/recaptcha', csurf, (req, res, next) => {\n\n  let body = {response: req.body['g-recaptcha-response'], remoteip: req.ip}\n  let email = req.body.email\n\n  if ((!body.response | !email)) {\n    return res.status(400).json({error: 'Invalid parameters'})\n  }\n\n  validateSubmitter(body.response, body.remoteip, (err, result) => {\n    if (err || !result.success)\n      return res.status(400).json(result)\n    let token = createAudioSignature({email: email, ip: req.ip, challenge_ts: result.challenge_ts})\n\n    if (token.error) {\n      return res.status(400).json({error: 'Could not validate submitter'})\n    }\n\n    level.put(token.jwtid, token, (e, success) => {\n      if (e) {\n        return next(e)\n      }\n\n      return res.status(200).json(token)\n    })\n  })\n})\n\nrouter.post('/save-upload', (req, res, next) => {\n\n  // validateSubmitter(req)\n  res.json()\n\n})\n\nrouter.delete('/:id', (req, res, next) => {\n  let fileName = ''\n\n})\n// http://dev.ericmiller.io/voicemail/webhook/status/voice\nrouter.post('/webhook/call/status', (req, res, next) => {\n  let call = req.body\n  console.log(req.body)\n  if (call.Direction !== 'inbound') {\n    res.writeHead(200)\n    return res.end()\n  }\n\n  // response.Say(\"Chapeau!\", voice: \"woman\", language: \"fr\");\n  let cl = new CallLog({\n    phone_number: call.From,\n    from_country: call.FromCountry,\n    timestamp: moment(call.Timestamp).valueOf(),\n    call_sid: call.CallSid,\n    call_meta: call\n  })\n\n  cl.save((err, doc) => {\n\n    if (doc)\n      ch.emit('new-call', doc.toObject())\n\n    res.writeHead(200)\n    res.end()\n  })\n})\n\nrouter.post('/webhook/incoming/voice', (req, res, next) => {\n  const twiml = new VoiceResponse()\n  // /webhook/incoming/voice\n  twiml.say({voice: 'alice', language: 'pt-BR', loop: 1}, 'Bom dia.')\n  // twiml.pause({length: 1})\n  twiml.say({\n    voice: 'alice',\n    language: 'en-US',\n    loop: 1\n    // }, 'When your near your computer visit my site at www.ericmiller.io/voicemail and leave me a message. This was built with tweelio\\'s voice api. Chow')\n  }, 'When your near your computer visit my site at www.ericmiller.io/voicemail or leave me a message.')\n  twiml.say({\n    voice: 'alice',\n    language: 'en-US',\n    loop: 1\n    // }, 'When your near your computer visit my site at www.ericmiller.io/voicemail and leave me a message. This was built with tweelio\\'s voice api. Chow')\n  }, 'Beep')\n  twiml.record({transcribe: true})\n\n  twiml.hangup()\n  console.log(twiml.toString())\n  // response.Say(\"Chapeau!\", voice: \"woman\", language: \"fr\");\n\n  res.writeHead(200, {'Content-Type': 'text/xml'})\n  // res.writeHead(200, {'Content-Type': 'audio/wav'})\n\n  res.end(twiml.toString())\n})\n\nrouter.post('/webhook/incoming/sms', (req, res, next) => {\n  const twiml = new MessagingResponse()\n\n  twiml.message('When your near your computer go https://www.ericmiller.io/voicemail and leave me a message.')\n\n  res.writeHead(200, {'Content-Type': 'text/xml'})\n  res.end(twiml.toString())\n})\n\nrouter.post('/webhook/incoming/sms/error', (req, res, next) => {\n  const twiml = new MessagingResponse()\n\n  twiml.message('The Robots are coming! Head for the hills!')\n\n  res.writeHead(200, {'Content-Type': 'text/xml'})\n  res.end(twiml.toString())\n})\n\nfunction validateSubmitter (recaptcha, ip, cb) {\n  let url = `https://www.google.com/recaptcha/api/siteverify?secret= ${process.env.RECAPTCHA_SECRET}&response=${recaptcha}&remoteip=${ip}`\n  let request = {\n    url: url,\n    method: 'POST',\n    encoding: undefined\n  }\n  nets(request, (err, res, body) => {\n    // console.log(err)\n    return cb(err, JSON.parse(body))\n  })\n}\n\nmodule.exports = router\n"]}