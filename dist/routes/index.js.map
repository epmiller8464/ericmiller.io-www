{"version":3,"sources":["../../routes/index.js"],"names":["express","require","router","Router","fs","path","url","get","req","res","next","render","title","use","response","uri","parse","pathname","filename","join","process","cwd","readFile","err","file","writeHead","write","end","console","log","length","module","exports"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,SAASF,QAAQG,MAAR,EAAb;AACA,IAAMC,KAAKH,QAAQ,IAAR,CAAX;AACA,IAAMI,OAAOJ,QAAQ,MAAR,CAAb;AACA,IAAMK,MAAML,QAAQ,KAAR,CAAZ;AACA;AACA;AACAC,OAAOK,GAAP,CAAW,GAAX,EAAgB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACxCD,MAAIE,MAAJ,CAAW,OAAX,EAAoB,EAACC,OAAO,SAAR,EAApB;AACD,CAFD;;AAIAV,OAAOW,GAAP,CAAW,UAAX,EAAuB,UAACL,GAAD,EAAMM,QAAN,EAAgBJ,IAAhB,EAAyB;AAC9C,MAAIK,MAAMT,IAAIU,KAAJ,CAAUR,IAAIF,GAAd,EAAmBW,QAA7B;AAAA,MACEC,WAAWb,KAAKc,IAAL,CAAUC,QAAQC,GAAR,KAAgB,UAA1B,EAAsCN,GAAtC,CADb;AAEA;AACA;;AAEAX,KAAGkB,QAAH,CAAYJ,QAAZ,EAAsB,QAAtB,EAAgC,UAAUK,GAAV,EAAeC,IAAf,EAAqB;AACnD,QAAID,GAAJ,EAAS;AACPT,eAASW,SAAT,CAAmB,GAAnB,EAAwB;AACtB,wBAAgB;AADM,OAAxB;AAGAX,eAASY,KAAT,CAAeH,MAAM,IAArB;AACAT,eAASa,GAAT;AACA;AACD;AACDC,YAAQC,GAAR,CAAYL,KAAKM,MAAjB;AACAhB,aAASW,SAAT,CAAmB,GAAnB,EAAwB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AAPsB,KAAxB;AASAX,aAASY,KAAT,CAAeF,IAAf,EAAqB,QAArB;AACAV,aAASa,GAAT;AACD,GArBD;AAuBD,CA7BD;;AA+BAI,OAAOC,OAAP,GAAiB9B,MAAjB","file":"index.js","sourcesContent":["var express = require('express')\nvar router = express.Router()\nconst fs = require('fs')\nconst path = require('path')\nconst url = require('url')\n/* GET home page. */\n/* GET home page. */\nrouter.get('/', function (req, res, next) {\n  res.render('index', {title: 'Express'})\n})\n\nrouter.use('/uploads', (req, response, next) => {\n  var uri = url.parse(req.url).pathname,\n    filename = path.join(process.cwd() + '/uploads', uri)\n  // var filename = `./../uploads${req.url}`\n  // let ws = fs.createReadStream(filename, 'binary').write(Buffer.from(dataURL, 'binary'))\n\n  fs.readFile(filename, 'binary', function (err, file) {\n    if (err) {\n      response.writeHead(500, {\n        'Content-Type': 'text/plain'\n      })\n      response.write(err + '\\n')\n      response.end()\n      return\n    }\n    console.log(file.length)\n    response.writeHead(206, {\n      // 'Content-Type': 'audio/wav',\n      // 'Content-Type': 'application/octet-stream',\n      // 'content-range': `bytes 0-1/${file.length}`,\n      // 'content-range': `bytes 9750-${file.length - 9750}/${file.length}`,\n      // 'content-length': `${file.length}`,\n      // 'Accept-Range': `bytes`\n      // 'Content-Length': `XX`\n    })\n    response.write(file, 'binary')\n    response.end()\n  })\n\n})\n\nmodule.exports = router\n"]}