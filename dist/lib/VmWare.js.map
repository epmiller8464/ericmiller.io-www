{"version":3,"sources":["../../lib/VmWare.js"],"names":["fs","require","path","moment","VoiceMessage","updateAndRemoveFile","filename","id","response","cb","search","join","process","env","PWD","deleteFileOnDisk","err","result","findByIdAndUpdate","location","Location","key","isTemp","meta","new","vm","toObject","writeToDisk","audio","fileName","dataURL","fileExtension","split","pop","fileRootNameWithBase","filePath","fileID","existsSync","ws","createWriteStream","write","Buffer","from","fromEmail","email","image","read","waveForm","save","doc","unlink","console","log","module","exports"],"mappings":"AAAA;;AACA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,SAASF,QAAQ,QAAR,CAAf;;eACuBA,QAAQ,SAAR,C;IAAhBG,Y,YAAAA,Y;;AAEP,SAASC,mBAAT,CAA8BC,QAA9B,EAAwCC,EAAxC,EAA4CC,QAA5C,EAAsDC,EAAtD,EAA0D;AACxDH,aAAWA,SAASI,MAAT,CAAgB,SAAhB,KAA8B,CAA9B,GAAkCJ,QAAlC,GAA6CJ,KAAKS,IAAL,CAAUC,QAAQC,GAAR,CAAYC,GAAtB,EAA2B,WAA3B,EAAwCR,QAAxC,CAAxD;;AAEAS,mBAAiBT,QAAjB,EAA2B,UAACU,GAAD,EAAMC,MAAN,EAAiB;;AAE1Cb,iBAAac,iBAAb,CAA+BX,EAA/B,EAAmC;AACjCY,gBAAUX,SAASY,QADc;AAEjCd,gBAAUE,SAASa,GAFc;AAGjCC,cAAQ,KAHyB;AAIjCC,YAAMf;AAJ2B,KAAnC,EAKG,EAACgB,KAAK,IAAN,EALH,EAKgB,UAACR,GAAD,EAAMS,EAAN,EAAa;AAC3B,UAAIT,GAAJ,EAAS;AACP,eAAOP,GAAGO,GAAH,CAAP;AACD;;AAED,aAAOP,GAAGO,GAAH,EAAQS,GAAGC,QAAH,EAAR,CAAP;AACD,KAXD;AAYD,GAdD;AAeD;;AAED,SAASC,WAAT,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuCpB,EAAvC,EAA2C;AACzC,MAAIqB,UAAUF,MAAME,OAApB;AACA,MAAIC,gBAAgBF,SAASG,KAAT,CAAe,GAAf,EAAoBC,GAApB,EAApB;AACA,MAAIC,uBAAuB,eAAeL,QAA1C;AACA,MAAIM,WAAWD,oBAAf;AACA,MAAIE,SAAS,CAAb;;AAEA;AACA,SAAOpC,GAAGqC,UAAH,CAAcF,QAAd,CAAP,EAAgC;AAC9BA,eAAWD,uBAAuB,GAAvB,GAA6BE,MAA7B,GAAsC,IAAtC,GAA6CL,aAAxD;AACAK,cAAU,CAAV;AACD;;AAEDN,YAAUA,QAAQE,KAAR,CAAc,GAAd,EAAmBC,GAAnB,EAAV;AACA;AACA;AACA,MAAIK,KAAKtC,GAAGuC,iBAAH,CAAqBJ,QAArB,EAA+B,QAA/B,EAAyCK,KAAzC,CAA+CC,OAAOC,IAAP,CAAYZ,OAAZ,EAAqB,QAArB,CAA/C,CAAT;AACA;AACA;AACA;AACA,MAAIL,KAAK,IAAIrB,YAAJ,CAAiB;AACxBuC,eAAWf,MAAMgB,KADO;AAExBC,WAAOjB,MAAMiB,KAFW;AAGxBC,UAAM,KAHkB;AAIxBC,cAAUnB,MAAMmB,QAJQ;AAKxB5B,cAAUgB,QALc;AAMxB7B,cAAU6B;AANc,GAAjB,CAAT;AAQAV,KAAGuB,IAAH,CAAQ,UAAChC,GAAD,EAAMiC,GAAN,EAAc;;AAEpB,WAAOxC,GAAGO,GAAH,EAAQiC,IAAIvB,QAAJ,EAAR,CAAP;AACD,GAHD;AAID;;AAED,SAASX,gBAAT,CAA2Bc,QAA3B,EAAqCpB,EAArC,EAAyC;AACvCT,KAAGkD,MAAH,CAAUrB,SAASnB,MAAT,CAAgB,WAAhB,KAAgC,CAAhC,GAAoCmB,QAApC,kBAA4DA,QAAtE,EAAkF,UAACb,GAAD,EAAS;AACzF,QAAIA,GAAJ,EAAS;AACP,aAAOP,GAAGO,GAAH,CAAP;AACD;AACDmC,YAAQC,GAAR,2BAAoCvB,QAApC;AACA,WAAOpB,GAAG,IAAH,EAAS,IAAT,CAAP;AACD,GAND;AAOD;;AAED4C,OAAOC,OAAP,GAAiB,EAAC3B,wBAAD,EAActB,wCAAd,EAAjB","file":"VmWare.js","sourcesContent":["'use strict'\nconst fs = require('fs')\nconst path = require('path')\nconst moment = require('moment')\nconst {VoiceMessage} = require('./model')\n\nfunction updateAndRemoveFile (filename, id, response, cb) {\n  filename = filename.search('uploads') >= 0 ? filename : path.join(process.env.PWD, '/uploads/', filename)\n\n  deleteFileOnDisk(filename, (err, result) => {\n\n    VoiceMessage.findByIdAndUpdate(id, {\n      location: response.Location,\n      filename: response.key,\n      isTemp: false,\n      meta: response\n    }, {new: true}, (err, vm) => {\n      if (err) {\n        return cb(err)\n      }\n\n      return cb(err, vm.toObject())\n    })\n  })\n}\n\nfunction writeToDisk (audio, fileName, cb) {\n  let dataURL = audio.dataURL\n  let fileExtension = fileName.split('.').pop()\n  let fileRootNameWithBase = './uploads/' + fileName\n  let filePath = fileRootNameWithBase\n  let fileID = 2\n\n  // @todo return the new filename to client\n  while (fs.existsSync(filePath)) {\n    filePath = fileRootNameWithBase + '(' + fileID + ').' + fileExtension\n    fileID += 1\n  }\n\n  dataURL = dataURL.split(',').pop()\n  // fileBuffer = new Buffer(dataURL, 'base64')\n  // fs.writeFileSync(filePath, fileBuffer)\n  let ws = fs.createWriteStream(filePath, 'base64').write(Buffer.from(dataURL, 'base64'))\n  // console.log('filePath', filePath)\n  // let key = buildKeyName(audio.email)\n  // console.log(`key: ${key} path: ${filePath}`)\n  let vm = new VoiceMessage({\n    fromEmail: audio.email,\n    image: audio.image,\n    read: false,\n    waveForm: audio.waveForm,\n    location: filePath,\n    filename: filePath\n  })\n  vm.save((err, doc) => {\n\n    return cb(err, doc.toObject())\n  })\n}\n\nfunction deleteFileOnDisk (fileName, cb) {\n  fs.unlink(fileName.search('./uploads') >= 0 ? fileName : `./uploads/${fileName}`, (err) => {\n    if (err) {\n      return cb(err)\n    }\n    console.log(`successfully deleted ${fileName}`)\n    return cb(null, true)\n  })\n}\n\nmodule.exports = {writeToDisk, updateAndRemoveFile}"]}