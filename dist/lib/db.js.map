{"version":3,"sources":["../../lib/db.js"],"names":["dbConfig","require","db","mongoose","Promise","module","exports","cb","dbOptions","useMongoClient","native_parser","poolSize","keepAlive","promiseLibrary","connect","mongoDbUri","then","on","console","info","bind","error","once","callback","log"],"mappings":"AAAA;;AACA,IAAIA,WAAWC,QAAQ,WAAR,EAAqBC,EAApC;AACA,IAAIC,WAAWF,QAAQ,UAAR,CAAf;AACAE,SAASC,OAAT,GAAmBH,QAAQ,UAAR,CAAnB;;AAEAI,OAAOC,OAAP,GAAiB,UAAUC,EAAV,EAAc;;AAE7B,MAAIC,YAAY;AACdC,oBAAgB,IADF;AAEdC,mBAAe,IAFD;AAGdC,cAAU,CAHI;AAIdC,eAAW,CAJG;AAKdC,oBAAgBZ,QAAQ,UAAR;AALF,GAAhB;;AAQAE,WAASW,OAAT,CAAiBd,SAASe,UAA1B,EAAsCP,SAAtC,EACCQ,IADD,CACM,UAACd,EAAD,EAAQ;AACZA,OAAGe,EAAH,CAAM,MAAN,EAAcC,QAAQC,IAAR,CAAaC,IAAb,CAAkBF,OAAlB,EAA2B,iBAA3B,CAAd;AACAhB,OAAGe,EAAH,CAAM,OAAN,EAAeC,QAAQG,KAAR,CAAcD,IAAd,CAAmBF,OAAnB,EAA4B,kBAA5B,CAAf;AACAhB,OAAGoB,IAAH,CAAQ,MAAR,EAAgB,UAACC,QAAD,EAAc;AAC5BL,cAAQM,GAAR,CAAY,MAAZ;AACD,KAFD;AAGA,WAAOjB,GAAGL,EAAH,CAAP;AACD,GARD;AASD,CAnBD","file":"db.js","sourcesContent":["'use strict'\nlet dbConfig = require('../config').db\nlet mongoose = require('mongoose')\nmongoose.Promise = require('bluebird')\n\nmodule.exports = function (cb) {\n\n  let dbOptions = {\n    useMongoClient: true,\n    native_parser: true,\n    poolSize: 5,\n    keepAlive: 1,\n    promiseLibrary: require('bluebird')\n  }\n\n  mongoose.connect(dbConfig.mongoDbUri, dbOptions)\n  .then((db) => {\n    db.on('open', console.info.bind(console, 'connection open'))\n    db.on('error', console.error.bind(console, 'connection error'))\n    db.once('open', (callback) => {\n      console.log('open')\n    })\n    return cb(db)\n  })\n}\n"]}