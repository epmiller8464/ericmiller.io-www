{"version":3,"sources":["../../lib/room.js"],"names":["db","require","User","pino","noop","Room","opts","self","io","id","channel","nsp","peers","broadcaster","isConnected","channelIsReady","prototype","peerCount","Object","keys","length","onJoinChannel","username","socket","cb","onIncomingMessage","data","info","emit","onSignaling","join","user","module","exports"],"mappings":"AAAA;;AACA,IAAIA,KAAKC,QAAQ,iBAAR,CAAT;AACA,IAAIC,OAAOD,QAAQ,QAAR,CAAX;AACA,IAAIE,OAAOF,QAAQ,MAAR,CAAX;AACA,IAAIG,+BAAO,SAAPA,IAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAPA,IAAO;AAAA,CAAP,CAAJ;AACA,IAAIC,OAAO,SAASA,IAAT,CAAeC,IAAf,EAAqB;AAC9B;;AACA,MAAI,EAAE,gBAAgBD,IAAlB,CAAJ,EACE,OAAO,IAAIA,IAAJ,CAASC,IAAT,CAAP;;AAEFA,SAAOA,QAAQ,EAAf;AACA,MAAIC,OAAO,IAAX;AACA,MAAIC,KAAKF,KAAKE,EAAd;AACAD,OAAKD,IAAL,GAAYA,IAAZ;AACAC,OAAKE,EAAL,GAAUH,KAAKG,EAAf;AACAF,OAAKG,OAAL,GAAeJ,KAAKI,OAApB;AACAH,OAAKI,GAAL,GAAW,IAAX;AACAJ,OAAKK,KAAL,GAAa,IAAb;AACAL,OAAKM,WAAL,GAAmB,IAAnB;AACAN,OAAKO,WAAL,GAAmB,KAAnB;AACAP,OAAKQ,cAAL,GAAsB,KAAtB;;AAEA;;AAEA;AACA,SAAQR,IAAR;AACD,CArBD;;AAuBAF,KAAKW,SAAL,CAAeC,SAAf,GAA2B,YAAY;AACrC,MAAIV,OAAO,IAAX;AACA,SAAOW,OAAOC,IAAP,CAAYZ,KAAKK,KAAjB,EAAwBQ,MAA/B;AACD,CAHD;;AAKAf,KAAKW,SAAL,CAAeK,aAAf,GAA+B,UAAUC,QAAV,EAAoBC,MAApB,EAA4BC,EAA5B,EAAgC,CAC9D,CADD;;AAGAnB,KAAKW,SAAL,CAAeS,iBAAf,GAAmC,UAAUC,IAAV,EAAgB;;AAEjDvB,OAAKwB,IAAL,CAAUD,IAAV;AACAf,MAAIiB,IAAJ,CAAS,SAAT,EAAoBF,IAApB;AACD,CAJD;;AAMArB,KAAKW,SAAL,CAAea,WAAf,GAA6B,YAAY,CACxC,CADD;;AAGA,SAASC,IAAT,CAAeP,MAAf,EAAuBC,EAAvB,EAA2B;AACzB,MAAIjB,OAAO,IAAX;AACA,MAAI,CAACwB,IAAL,EACE,OAAOP,IAAP;;AAEF,MAAI,CAACjB,KAAKK,KAAV,EAAiB;AACfL,SAAKK,KAAL,GAAa,EAAb;AACD;;AAED,MAAI,CAACL,KAAKM,WAAV,EACEN,KAAKM,WAAL,GAAmBkB,KAAKtB,EAAxB;;AAEFF,OAAKK,KAAL,CAAWmB,KAAKtB,EAAhB,IAAsBsB,IAAtB;;AAEAxB,OAAKI,GAAL,CAASiB,IAAT,CAAc,gBAAd,EAAgCG,IAAhC;AACA,SAAOP,GAAGO,IAAH,CAAP;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,OAAOC,OAAP,GAAiB5B,IAAjB","file":"room.js","sourcesContent":["'use strict'\nvar db = require('./data-store/db')\nvar User = require('./user')\nvar pino = require('pino')\nvar noop = function* () {}\nvar Room = function Room (opts) {\n  'use strict'\n  if (!(this instanceof Room))\n    return new Room(opts)\n\n  opts = opts || {}\n  var self = this\n  var io = opts.io\n  self.opts = opts\n  self.id = opts.id\n  self.channel = opts.channel\n  self.nsp = null\n  self.peers = null\n  self.broadcaster = null\n  self.isConnected = false\n  self.channelIsReady = false\n\n  //var nsp = io.of('/' + data.channel)\n\n  //self.nsp.on('connection', Room.onConnection);\n  return (self)\n}\n\nRoom.prototype.peerCount = function () {\n  var self = this\n  return Object.keys(self.peers).length\n}\n\nRoom.prototype.onJoinChannel = function (username, socket, cb) {\n}\n\nRoom.prototype.onIncomingMessage = function (data) {\n\n  pino.info(data)\n  nsp.emit('message', data)\n}\n\nRoom.prototype.onSignaling = function () {\n}\n\nfunction join (socket, cb) {\n  var self = this\n  if (!user)\n    return cb()\n\n  if (!self.peers) {\n    self.peers = {}\n  }\n\n  if (!self.broadcaster)\n    self.broadcaster = user.id\n\n  self.peers[user.id] = user\n\n  self.nsp.emit('channel-joined', user)\n  return cb(user)\n}\n\n//\n//function send(channel, username, socket, cb) {\n//\n//    db.get(channel, function (err, room) {\n//\n//        if(err)return cb(err, null)\n//        if(!room)return cb(new Error('couldnt find your channel'), null)\n//\n//        if(room) {\n//            var user = new User({\n//                id: socket.id,\n//                username: username\n//                //socket:socket,\n//            })\n//\n//            if(!room.peers) {\n//                room.peers = {}\n//            }\n//\n//            if(!room.initiator)\n//                room.initiator = user.id\n//\n//            room.peers[user.id] = user\n//            db.put(room.channel, room, function (err) {\n//                return cb(err, room)\n//            })\n//        }\n//\n//    })\n//}\nmodule.exports = Room\n\n\n"]}