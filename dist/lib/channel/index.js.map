{"version":3,"sources":["../../../lib/channel/index.js"],"names":["ChatLog","require","uuid","hmacSHA512","Base64","hmac","msg","user","nonce","stringify","process","env","JWT_SIGNATURE","createChannel","channelName","from","Promise","resolve","reject","_id","v4","hash","session","channel","creator","put","err","success","findChannel","channelId","get","record","module","exports"],"mappings":"AAAA;;AACA,IAAIA,UAAUC,QAAQ,4BAAR,EAAsC,UAAtC,CAAd;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,aAAaF,QAAQ,uBAAR,CAAnB;AACA,IAAMG,SAASH,QAAQ,sBAAR,CAAf;AACA;;AAEA,IAAMI,OAAO,SAAPA,IAAO,CAACC,GAAD,EAAMC,IAAN,EAAYC,KAAZ;AAAA,SAAsBJ,OAAOK,SAAP,CAAiBN,WAAcK,KAAd,SAAuBD,IAAvB,SAA+BD,GAA/B,EAAsCI,QAAQC,GAAR,CAAYC,aAAlD,CAAjB,CAAtB;AAAA,CAAb;;AAEA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAAUC,WAAV,EAAuBC,IAAvB,EAA6B;AACjD,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAIC,MAAMjB,KAAKkB,EAAL,EAAV;AACA,QAAIC,OAAOhB,KAAKS,WAAL,EAAkBC,IAAlB,EAAwBI,GAAxB,CAAX;AACA,QAAIG,UAAU;AACZC,eAAST,WADG;AAEZU,eAAST,IAFG;AAGZM,YAAMA,IAHM;AAIZF;AAJY,KAAd;AAMAnB,YAAQyB,GAAR,CAAYX,WAAZ,EAAyBQ,OAAzB,EAAkC,UAACI,GAAD,EAAMC,OAAN,EAAkB;AAClD,UAAID,GAAJ,EACE,OAAOR,OAAOQ,GAAP,CAAP;;AAEF,aAAOT,QAAQK,OAAR,CAAP;AACD,KALD;AAMD,GAfM,CAAP;AAiBD,CAlBD;AAmBA,IAAMM,cAAc,SAAdA,WAAc,CAAUC,SAAV,EAAqB;AACvC,SAAO,IAAIb,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5ClB,YAAQ8B,GAAR,CAAYD,SAAZ,EAAuB,UAACH,GAAD,EAAMK,MAAN,EAAiB;AACtC;AACA;;AAEA,aAAOd,QAAQS,GAAR,EAAaK,MAAb,CAAP;AACD,KALD;AAMD,GAPM,CAAP;AAQD,CATD;;AAWAC,OAAOC,OAAP,GAAiB,EAACpB,4BAAD,EAAgBe,wBAAhB,EAAjB","file":"index.js","sourcesContent":["'use strict'\nvar ChatLog = require('../data-store/memory-store')('chat-log')\nconst uuid = require('uuid')\nconst hmacSHA512 = require('crypto-js/hmac-sha512')\nconst Base64 = require('crypto-js/enc-base64')\n// const nonce = require('nonce')\n\nconst hmac = (msg, user, nonce) => Base64.stringify(hmacSHA512(`${nonce}:${user}:${msg}`, process.env.JWT_SIGNATURE))\n\nconst createChannel = function (channelName, from) {\n  return new Promise(function (resolve, reject) {\n    let _id = uuid.v4()\n    let hash = hmac(channelName, from, _id)\n    let session = {\n      channel: channelName,\n      creator: from,\n      hash: hash,\n      _id\n    }\n    ChatLog.put(channelName, session, (err, success) => {\n      if (err)\n        return reject(err)\n\n      return resolve(session)\n    })\n  })\n\n}\nconst findChannel = function (channelId) {\n  return new Promise(function (resolve, reject) {\n    ChatLog.get(channelId, (err, record) => {\n      // if (err)\n      //   return reject(err)\n\n      return resolve(err, record)\n    })\n  })\n}\n\nmodule.exports = {createChannel, findChannel}"]}