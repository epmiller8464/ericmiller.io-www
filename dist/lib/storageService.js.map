{"version":3,"sources":["../../lib/storageService.js"],"names":["AWS","require","fs","path","s3","S3","apiVersion","upload","file","metaData","cb","fileStream","createReadStream","on","err","console","log","key","basename","uploadParams","Bucket","process","env","AWS_AUDIO_BUCKET","Key","Body","Metadata","data","Location","Service","module","exports"],"mappings":"AAAA;AACA;;AACA,IAAIA,MAAMC,QAAQ,SAAR,CAAV;AACA,IAAIC,KAAKD,QAAQ,IAAR,CAAT;AACA,IAAIE,OAAOF,QAAQ,MAAR,CAAX;;AAEA;AACA,IAAIG,KAAK,IAAIJ,IAAIK,EAAR,CAAW,EAACC,YAAY,YAAb,EAAX,CAAT;AACA;AACA,SAASC,MAAT,CAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,EAAjC,EAAqC;;AAEnC,MAAIC,aAAaT,GAAGU,gBAAH,CAAoBJ,IAApB,CAAjB;;AAEAG,aAAWE,EAAX,CAAc,OAAd,EAAuB,UAAUC,GAAV,EAAe;AACpCC,YAAQC,GAAR,CAAY,YAAZ,EAA0BF,GAA1B;AACA,WAAOJ,GAAGI,GAAH,CAAP;AACD,GAHD;AAIA,MAAIG,MAAMd,KAAKe,QAAL,CAAcV,IAAd,CAAV;AACA,MAAMW,eAAe;AACnBC,YAAQC,QAAQC,GAAR,CAAYC,gBADD;AAEnBC,SAAKP,GAFc;AAGnBQ,UAAMd,UAHa;AAInBe,cAAUjB;AAJS,GAArB;AAMF;AACEL,KAAGG,MAAH,CAAUY,YAAV,EAAwB,UAAUL,GAAV,EAAea,IAAf,EAAqB;AAC3C,QAAIb,GAAJ,EAAS;AACPC,cAAQC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACA,aAAOJ,GAAGI,GAAH,CAAP;AACD;AACD,QAAIa,IAAJ,EAAU;AACRZ,cAAQC,GAAR,CAAY,gBAAZ,EAA8BW,KAAKC,QAAnC;AACA,aAAOlB,GAAG,IAAH,EAASiB,IAAT,CAAP;AACD;AACF,GATD;AAUD;AACD,IAAME,UAAU;AACd7B,OAAK;AACHO;AADG;AADS,CAAhB;AAKAuB,OAAOC,OAAP,GAAiB,EAACF,gBAAD,EAAjB","file":"storageService.js","sourcesContent":["'use strict'\n// Load the AWS SDK for Node.js\nlet AWS = require('aws-sdk')\nlet fs = require('fs')\nlet path = require('path')\n\n// Create S3 service object\nlet s3 = new AWS.S3({apiVersion: '2006-03-01'})\n// call S3 to retrieve upload file to specified bucket\nfunction upload (file, metaData, cb) {\n\n  var fileStream = fs.createReadStream(file)\n\n  fileStream.on('error', function (err) {\n    console.log('File Error', err)\n    return cb(err)\n  })\n  let key = path.basename(file)\n  const uploadParams = {\n    Bucket: process.env.AWS_AUDIO_BUCKET,\n    Key: key,\n    Body: fileStream,\n    Metadata: metaData\n  }\n// call S3 to retrieve upload file to specified bucket\n  s3.upload(uploadParams, function (err, data) {\n    if (err) {\n      console.log('Error', err)\n      return cb(err)\n    }\n    if (data) {\n      console.log('Upload Success', data.Location)\n      return cb(null, data)\n    }\n  })\n}\nconst Service = {\n  AWS: {\n    upload\n  }\n}\nmodule.exports = {Service}\n"]}