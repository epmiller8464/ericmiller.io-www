{"version":3,"sources":["../../../lib/model/voice-message.js"],"names":["mongoose","require","Schema","module","exports","voiceMessageSchema","title","String","fromEmail","type","trim","lowercase","required","minLength","match","comments","Types","Object","filename","image","waveForm","isTemp","Boolean","default","createDate","Date","read","hidden","location","meta","collection","Model","model","e"],"mappings":"AAAA;;AAEA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,SAASF,SAASE,MAAtB;;AAEAC,OAAOC,OAAP,GAAiB,YAAY;AAC3B;AACA,MAAIC,qBAAqB,IAAIH,MAAJ,CAAW;AAClCI,WAAOC,MAD2B;AAElCC,eAAW,EAACC,MAAMF,MAAP,EAAeG,MAAM,IAArB,EAA2BC,WAAW,IAAtC,EAA4CC,UAAU,IAAtD,EAA4DC,WAAW,CAAvE,EAA0EC,OAAO,YAAjF,EAFuB;AAGlCC,cAAU,CAAC,EAACN,MAAMT,SAASE,MAAT,CAAgBc,KAAhB,CAAsBC,MAA7B,EAAD,CAHwB;AAIlCC,cAAUX,MAJwB;AAKlCY,WAAOZ,MAL2B;AAMlCa,cAAU,EAACX,MAAMT,SAASE,MAAT,CAAgBc,KAAhB,CAAsBC,MAA7B,EANwB;AAOlCI,YAAQ,EAACZ,MAAMa,OAAP,EAAgBC,SAAS,IAAzB,EAP0B;AAQlCC,gBAAY;AACVf,YAAMgB;AACN;AACA;AACA;AACA;AALU,KARsB;AAelCC,UAAM,EAACjB,MAAMa,OAAP,EAAgBC,SAAS,KAAzB,EAf4B;AAgBlCI,YAAQ,EAAClB,MAAMa,OAAP,EAAgBC,SAAS,KAAzB,EAhB0B;AAiBlCK,cAAUrB,MAjBwB;AAkBlCsB,UAAM,EAACpB,MAAMT,SAASE,MAAT,CAAgBc,KAAhB,CAAsBC,MAA7B;AAlB4B,GAAX,EAmBtB,EAACa,YAAY,eAAb,EAnBsB,CAAzB;;AAqBA,MAAIC,cAAJ;AACA,MAAI;AACF;AACAA,YAAQ/B,SAASgC,KAAT,CAAe,eAAf,CAAR;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVF,YAAQ/B,SAASgC,KAAT,CAAe,eAAf,EAAgC3B,kBAAhC,CAAR;AACD;AACD,SAAO0B,KAAP;AACD,CA/BD","file":"voice-message.js","sourcesContent":["'use strict'\n\nvar mongoose = require('mongoose')\nvar Schema = mongoose.Schema\n\nmodule.exports = function () {\n  // let {moment} = require('moment')()\n  let voiceMessageSchema = new Schema({\n    title: String,\n    fromEmail: {type: String, trim: true, lowercase: true, required: true, minLength: 1, match: /.+\\@.+\\..+/},\n    comments: [{type: mongoose.Schema.Types.Object}],\n    filename: String,\n    image: String,\n    waveForm: {type: mongoose.Schema.Types.Object},\n    isTemp: {type: Boolean, default: true},\n    createDate: {\n      type: Date\n      // get: function () { return this.__createDate },\n      // set: function (v) {\n      //   this.__createDate = new Date(v)\n      // }\n    },\n    read: {type: Boolean, default: false},\n    hidden: {type: Boolean, default: false},\n    location: String,\n    meta: {type: mongoose.Schema.Types.Object}\n  }, {collection: 'voice_message'})\n\n  let Model\n  try {\n    // Throws an error if \"Name\" hasn't been registered\n    Model = mongoose.model('voice_message')\n  } catch (e) {\n    Model = mongoose.model('voice_message', voiceMessageSchema)\n  }\n  return Model\n}\n"]}