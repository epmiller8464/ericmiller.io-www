{"version":3,"sources":["../../../lib/model/chat-log.js"],"names":["mongoose","require","Schema","module","exports","message","from","String","to","text","delivered","type","Boolean","default","required","read","seq","Number","timestamp","Date","now","_id","chatSchema","channel","creator","sid","messages","hash","unique","meta","Types","Object","collection","timestamps","createdAt","updatedAt","Model","model","e"],"mappings":"AAAA;;AAEA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,SAASF,SAASE,MAAtB;;AAEAC,OAAOC,OAAP,GAAiB,YAAY;AAC3B;AACA;AACA,MAAIC,UAAU,IAAIH,MAAJ,CAAW;AACvBI,UAAMC,MADiB;AAEvBC,QAAID,MAFmB;AAGvBE,UAAMF,MAHiB;AAIvBG,eAAW,EAACC,MAAMC,OAAP,EAAgBC,SAAS,KAAzB,EAAgCC,UAAU,IAA1C,EAJY;AAKvBC,UAAM,EAACJ,MAAMC,OAAP,EAAgBC,SAAS,KAAzB,EAAgCC,UAAU,IAA1C,EALiB;AAMvBE,SAAKC,MANkB;AAOvBC,eAAW,EAACP,MAAMM,MAAP,EAAeJ,SAASM,KAAKC,GAA7B,EAAkCN,UAAU,IAA5C;AAPY,GAAX,EAQX,EAACO,KAAK,KAAN,EARW,CAAd;;AAUA,MAAIC,aAAa,IAAIpB,MAAJ,CAAW;AAC1BqB,aAAS,EAACZ,MAAMJ,MAAP,EAAeO,UAAU,IAAzB,EADiB;AAE1BU,aAAS,EAACb,MAAMJ,MAAP,EAAeO,UAAU,IAAzB,EAFiB;AAG1BW,SAAKlB,MAHqB;AAI1BmB,cAAU,EAACf,MAAM,CAACN,OAAD,CAAP,EAJgB;AAK1BsB,UAAM,EAAChB,MAAMJ,MAAP,EAAeO,UAAU,IAAzB,EAA+Bc,QAAQ,IAAvC,EALoB;AAM1BC,UAAM,EAAClB,MAAMX,SAASE,MAAT,CAAgB4B,KAAhB,CAAsBC,MAA7B;AANoB,GAAX,EAOd,EAACC,YAAY,UAAb,EAAyBC,YAAY,EAACC,WAAW,YAAZ,EAA0BC,WAAW,YAArC,EAArC,EAPc,CAAjB;;AASA,MAAIC,cAAJ;AACA,MAAI;AACF;AACAA,YAAQpC,SAASqC,KAAT,CAAe,UAAf,CAAR;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVF,YAAQpC,SAASqC,KAAT,CAAe,UAAf,EAA2Bf,UAA3B,CAAR;AACD;AACD,SAAOc,KAAP;AACD,CA9BD","file":"chat-log.js","sourcesContent":["'use strict'\n\nlet mongoose = require('mongoose')\nlet Schema = mongoose.Schema\n\nmodule.exports = function () {\n  //\n  // let {moment} = require('moment')()\n  let message = new Schema({\n    from: String,\n    to: String,\n    text: String,\n    delivered: {type: Boolean, default: false, required: true},\n    read: {type: Boolean, default: false, required: true},\n    seq: Number,\n    timestamp: {type: Number, default: Date.now, required: true}\n  }, {_id: false})\n\n  let chatSchema = new Schema({\n    channel: {type: String, required: true},\n    creator: {type: String, required: true},\n    sid: String,\n    messages: {type: [message]},\n    hash: {type: String, required: true, unique: true},\n    meta: {type: mongoose.Schema.Types.Object}\n  }, {collection: 'chat_log', timestamps: {createdAt: 'created_at', updatedAt: 'updated_at'}})\n\n  let Model\n  try {\n    // Throws an error if \"Name\" hasn't been registered\n    Model = mongoose.model('chat_log')\n  } catch (e) {\n    Model = mongoose.model('chat_log', chatSchema)\n  }\n  return Model\n}\n"]}